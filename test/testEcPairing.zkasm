; constants needed by executor C++
CONST %N = 2**19
;CONST %MAX_CNT_STEPS_LIMIT = %N
;CONST %MAX_CNT_ARITH_LIMIT = %N
;CONST %MAX_CNT_BINARY_LIMIT = %N
;CONST %MAX_CNT_MEM_ALIGN_LIMIT = %N
;CONST %MAX_CNT_KECCAK_F_LIMIT = %N
;CONST %MAX_CNT_PADDING_PG_LIMIT = %N
;CONST %MAX_CNT_POSEIDON_G_LIMIT = %N

VAR GLOBAL lastHashKId
VAR GLOBAL lastHashPId

VAR GLOBAL initial_A
VAR GLOBAL initial_B
VAR GLOBAL initial_C
VAR GLOBAL initial_D
VAR GLOBAL initial_E
VAR GLOBAL initial_CTX
VAR GLOBAL initial_SP
VAR GLOBAL initial_PC
VAR GLOBAL initial_GAS
VAR GLOBAL initial_SR
VAR GLOBAL initial_RR
VAR GLOBAL initial_HASHPOS
VAR GLOBAL initial_RCX

start:
        STEP => A
        0                                   :ASSERT

        A           :MSTORE(initial_A)
        B           :MSTORE(initial_B)
        C           :MSTORE(initial_C)
        D           :MSTORE(initial_D)
        E           :MSTORE(initial_E)
        CTX         :MSTORE(initial_CTX)
        SP          :MSTORE(initial_SP)
        PC          :MSTORE(initial_PC)
        GAS         :MSTORE(initial_GAS)
        SR          :MSTORE(initial_SR)
        RR          :MSTORE(initial_RR)
        HASHPOS     :MSTORE(initial_HASHPOS)
        RCX         :MSTORE(initial_RCX)
        0 => A,B,C,D,E,CTX, SP, PC, GAS, SR, RR, HASHPOS, RCX

        -1          :MSTORE(lastHashKId)
        -1          :MSTORE(lastHashPId)

        ; 1] 0 inputs should return 1
        0                                                                                       :MSTORE(ecPairing_ninputs)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        ; 2] Tests with 6 inputs
        ; 2.1] Fails and returns nothing if the input is invalid
        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        0n                                                                                      :MSTORE(MEM:E)
        1n                                                                                      :MSTORE(MEM:E + 1)
        2046729899889901964437012741252570163462327955511008570480857952505584629957n           :MSTORE(MEM:E + 2)
        4351401811647638138392695977895401859084096897123577305203754529537814663109n           :MSTORE(MEM:E + 3)
        14316075702276096164483565793667862351398527813470041574939773541551376891710n          :MSTORE(MEM:E + 4)
        322506915963699862059245473966830598387691259163658767351233132602858049743n            :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        0n                                                                                      :MSTORE(MEM:E)
        0n                                                                                      :MSTORE(MEM:E + 1)
        2046729899889901964437012741252570163462327955511008570480857952505584629957n           :MSTORE(MEM:E + 2)
        4351401811647638138392695977895401859084096897123577305203754529537814663108n           :MSTORE(MEM:E + 3)
        14316075702276096164483565793667862351398527813470041574939773541551376891710n          :MSTORE(MEM:E + 4)
        322506915963699862059245473966830598387691259163658767351233132602858049743n            :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        1n                                                                                      :MSTORE(MEM:E)
        2n                                                                                      :MSTORE(MEM:E + 1)
        2046729899889901964437012741252570163462327955511008570480857952505584629957n           :MSTORE(MEM:E + 2)
        4351401811647638138392695977895401859084096897123577305203754529537814663108n           :MSTORE(MEM:E + 3)
        14316075702276096164483565793667862351398527813470041574939773541551376891710n          :MSTORE(MEM:E + 4)
        322506915963699862059245473966830598387691259163658767351233132602858049743n            :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        1n                                                                                      :MSTORE(MEM:E)
        1n                                                                                      :MSTORE(MEM:E + 1)
        0n                                                                                      :MSTORE(MEM:E + 2)
        0n                                                                                      :MSTORE(MEM:E + 3)
        0n                                                                                      :MSTORE(MEM:E + 4)
        0n                                                                                      :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        0n                                                                                      :MSTORE(MEM:E)
        0n                                                                                      :MSTORE(MEM:E + 1)
        1n                                                                                      :MSTORE(MEM:E + 2)
        2n                                                                                      :MSTORE(MEM:E + 3)
        3n                                                                                      :MSTORE(MEM:E + 4)
        3n                                                                                      :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        ; 2.2] Fails if some input is not in range
        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        21888242871839275222246405745257275088696311157297823662689037894645226208583n          :MSTORE(MEM:E)
        1n                                                                                      :MSTORE(MEM:E + 1)
        0n                                                                                      :MSTORE(MEM:E + 2)
        0n                                                                                      :MSTORE(MEM:E + 3)
        0n                                                                                      :MSTORE(MEM:E + 4)
        0n                                                                                      :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        1n                                                                                      :MSTORE(MEM:E)
        21888242871839275222246405745257275088696311157297823662689037894645226208583n          :MSTORE(MEM:E + 1)
        0n                                                                                      :MSTORE(MEM:E + 2)
        0n                                                                                      :MSTORE(MEM:E + 3)
        0n                                                                                      :MSTORE(MEM:E + 4)
        0n                                                                                      :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        1n                                                                                      :MSTORE(MEM:E)
        2n                                                                                      :MSTORE(MEM:E + 1)
        21888242871839275222246405745257275088696311157297823662689037894645226208583n          :MSTORE(MEM:E + 2)
        0n                                                                                      :MSTORE(MEM:E + 3)
        0n                                                                                      :MSTORE(MEM:E + 4)
        0n                                                                                      :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        1n                                                                                      :MSTORE(MEM:E)
        2n                                                                                      :MSTORE(MEM:E + 1)
        0n                                                                                      :MSTORE(MEM:E + 2)
        21888242871839275222246405745257275088696311157297823662689037894645226208583n          :MSTORE(MEM:E + 3)
        0n                                                                                      :MSTORE(MEM:E + 4)
        0n                                                                                      :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        1n                                                                                      :MSTORE(MEM:E)
        2n                                                                                      :MSTORE(MEM:E + 1)
        0n                                                                                      :MSTORE(MEM:E + 2)
        0n                                                                                      :MSTORE(MEM:E + 3)
        21888242871839275222246405745257275088696311157297823662689037894645226208583n          :MSTORE(MEM:E + 4)
        0n                                                                                      :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        1n                                                                                      :MSTORE(MEM:E)
        2n                                                                                      :MSTORE(MEM:E + 1)
        0n                                                                                      :MSTORE(MEM:E + 2)
        0n                                                                                      :MSTORE(MEM:E + 3)
        0n                                                                                      :MSTORE(MEM:E + 4)
        21888242871839275222246405745257275088696311157297823662689037894645226208583n          :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        1 => A
        B                                                                                       :ASSERT

        ; 2.3] Degenerate tests: e(0,Q) = 1 or e(P,0) = 1 therefore the pairing equation is trivally satisfied
        ;      and in fact this is the only possibility for the pairing equation to be satisfied with one pair of P,Q
        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        0n                                                                                      :MSTORE(MEM:E)
        0n                                                                                      :MSTORE(MEM:E + 1)
        2046729899889901964437012741252570163462327955511008570480857952505584629957n           :MSTORE(MEM:E + 2)
        4351401811647638138392695977895401859084096897123577305203754529537814663109n           :MSTORE(MEM:E + 3)
        14316075702276096164483565793667862351398527813470041574939773541551376891710n          :MSTORE(MEM:E + 4)
        322506915963699862059245473966830598387691259163658767351233132602858049743n            :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        1n                                                                                      :MSTORE(MEM:E)
        2n                                                                                      :MSTORE(MEM:E + 1)
        0n                                                                                      :MSTORE(MEM:E + 2)
        0n                                                                                      :MSTORE(MEM:E + 3)
        0n                                                                                      :MSTORE(MEM:E + 4)
        0n                                                                                      :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        1                                                                                       :MSTORE(ecPairing_ninputs)
        32*6                                                                                    :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        0n                                                                                      :MSTORE(MEM:E)
        0n                                                                                      :MSTORE(MEM:E + 1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(MEM:E + 2)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(MEM:E + 3)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(MEM:E + 4)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        1               :MSTORE(ecPairing_ninputs)
        32*6            :MSTORE(txCalldataLen)
        -32             :MSTORE(readXFromCalldataOffset)

        0 => E
        0n                                                                                      :MSTORE(MEM:E)
        0n                                                                                      :MSTORE(MEM:E + 1)
        11509234998032783125480266028213992619847908725038453197451386571405359529652n          :MSTORE(MEM:E + 2)
        4099696940551850412667065443628214990719002449715926250279745743126938401735n           :MSTORE(MEM:E + 3)
        19060191254988907833052035421850065496347936631097225966803157637464336346786n          :MSTORE(MEM:E + 4)
        16129402215257578064845163124174157135534373400489420174780024516864802406908n          :MSTORE(MEM:E + 5)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        ; 3] Tests with 12 inputs

        ; Ethereum example
        2                                                                                       :MSTORE(ecPairing_ninputs)
        32*6*2                                                                                  :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        20333349487611174579608837001148061570648440167819460274134014152400656275674n          :MSTORE(MEM:E)
        19928268888036365434500215951569291213336085054454884806456691094014419998198n          :MSTORE(MEM:E + 1)
        14335504872549532354210489828671972911333347940534076142795111812609903378108n          :MSTORE(MEM:E + 2)
        15548973838770842196102442698708122006189018193868154757846481038796366125273n          :MSTORE(MEM:E + 3)
        19822981108166058814837087071162475941148726886187076297764129491697321004944n          :MSTORE(MEM:E + 4)
        21654797034782659092642090020723114658730107139270194997413654453096686856286n          :MSTORE(MEM:E + 5)
        1n                                                                                      :MSTORE(MEM:E + 6)
        21888242871839275222246405745257275088696311157297823662689037894645226208581n          :MSTORE(MEM:E + 7)
        11509234998032783125480266028213992619847908725038453197451386571405359529652n          :MSTORE(MEM:E + 8)
        4099696940551850412667065443628214990719002449715926250279745743126938401735n           :MSTORE(MEM:E + 9)
        19060191254988907833052035421850065496347936631097225966803157637464336346786n          :MSTORE(MEM:E + 10)
        16129402215257578064845163124174157135534373400489420174780024516864802406908n          :MSTORE(MEM:E + 11)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        ; KZG proof with one poly and one evaluation
        2                                                                                       :MSTORE(ecPairing_ninputs)
        32*6*2                                                                                  :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        20593188969319011263398594823255811823444990825298196162496264072013322991388n          :MSTORE(MEM:E)
        20958531318718262179638310844977035402258325676941759254411716094948903283238n          :MSTORE(MEM:E + 1)
        19014538453489502551198430834271851224745298622671277274539119640314913863353n          :MSTORE(MEM:E + 2)
        4011274991290276638756079424799286249285264639232842260296401218902340006571n           :MSTORE(MEM:E + 3)
        5493217260886730300768636259682920882409386426126823957476482234761131640151n           :MSTORE(MEM:E + 4)
        18471742500483808444303896273620229467289887099913869033627754256214290219997n          :MSTORE(MEM:E + 5)
        3526892542800189419786189901545486150149308978725362430328886936745555020543n           :MSTORE(MEM:E + 6)
        2119286186166371280112264238015778473404141003919064027522145193839708208181n           :MSTORE(MEM:E + 7)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(MEM:E + 8)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(MEM:E + 9)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(MEM:E + 10)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(MEM:E + 11)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        ; KZG proof with one poly and one evaluation
        2                                                                                       :MSTORE(ecPairing_ninputs)
        32*6*2                                                                                  :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        7732322222446307127032679746925673403013840763103947213960757438494804067267n           :MSTORE(MEM:E)
        8619360092012773279112944586645719683585858765189162557863470404130431808723n           :MSTORE(MEM:E + 1)
        7754062701624777074058760614745676120554164137217320298195308357000412149840n           :MSTORE(MEM:E + 2)
        4480687189204505779534873101802061566996023148878380905742776654135663383221n           :MSTORE(MEM:E + 3)
        18744429014512523574338799100424477374744612401726532054975840530120472566n             :MSTORE(MEM:E + 4)
        16667361185745910936700318129097219900413959552154798924397125501722669434888n          :MSTORE(MEM:E + 5)
        595801121933130257838893357109567932541713044978712091132608377833002940532n            :MSTORE(MEM:E + 6)
        15681552092527426161541501125159206079106959026991100968107368848241580050483n          :MSTORE(MEM:E + 7)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(MEM:E + 8)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(MEM:E + 9)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(MEM:E + 10)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(MEM:E + 11)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        ; 4] Tests with 18 inputs
        3                                                                                       :MSTORE(ecPairing_ninputs)
        32*6*3                                                                                  :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        7732322222446307127032679746925673403013840763103947213960757438494804067267n           :MSTORE(MEM:E)
        8619360092012773279112944586645719683585858765189162557863470404130431808723n           :MSTORE(MEM:E + 1)
        7754062701624777074058760614745676120554164137217320298195308357000412149840n           :MSTORE(MEM:E + 2)
        4480687189204505779534873101802061566996023148878380905742776654135663383221n           :MSTORE(MEM:E + 3)
        18744429014512523574338799100424477374744612401726532054975840530120472566n             :MSTORE(MEM:E + 4)
        16667361185745910936700318129097219900413959552154798924397125501722669434888n          :MSTORE(MEM:E + 5)
        595801121933130257838893357109567932541713044978712091132608377833002940532n            :MSTORE(MEM:E + 6)
        15681552092527426161541501125159206079106959026991100968107368848241580050483n          :MSTORE(MEM:E + 7)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(MEM:E + 8)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(MEM:E + 9)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(MEM:E + 10)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(MEM:E + 11)
        1n                                                                                      :MSTORE(MEM:E + 12)
        2n                                                                                      :MSTORE(MEM:E + 13)
        0n                                                                                      :MSTORE(MEM:E + 14)
        0n                                                                                      :MSTORE(MEM:E + 15)
        0n                                                                                      :MSTORE(MEM:E + 16)
        0n                                                                                      :MSTORE(MEM:E + 17)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        3                                                                                       :MSTORE(ecPairing_ninputs)
        32*6*3                                                                                  :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        20408625067408993290064640368727791004970573998302586029702220794326757674498n          :MSTORE(MEM:E)
        16305464745216061320718924810220361252899630638785881184214175311729150579496n          :MSTORE(MEM:E + 1)
        19366297632879679637284621799459008574776307690134846433263569915955921902826n          :MSTORE(MEM:E + 2)
        7402184029652592179271650707149396214555402416834379616679103713331638701004n           :MSTORE(MEM:E + 3)
        13233069919494729038860025360853108843397419493559475327647450442468969143158n          :MSTORE(MEM:E + 4)
        10493112377715503836766497500954305714610771526749266396762372159550562853087n          :MSTORE(MEM:E + 5)
        6065896804174124393372571703959114319291624137637105019419069942189555692569n           :MSTORE(MEM:E + 6)
        1817372094771574002977021734119138264961743925299214620753363200235482672254n           :MSTORE(MEM:E + 7)
        19366297632879679637284621799459008574776307690134846433263569915955921902826n          :MSTORE(MEM:E + 8)
        7402184029652592179271650707149396214555402416834379616679103713331638701004n           :MSTORE(MEM:E + 9)
        13233069919494729038860025360853108843397419493559475327647450442468969143158n          :MSTORE(MEM:E + 10)
        10493112377715503836766497500954305714610771526749266396762372159550562853087n          :MSTORE(MEM:E + 11)
        5155695327752856721154364733178772660419613502017586895566245903460009198248n           :MSTORE(MEM:E + 12)
        17870951736543108265510715325941304521966082260796939666348236029204261385066n          :MSTORE(MEM:E + 13)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(MEM:E + 14)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(MEM:E + 15)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(MEM:E + 16)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(MEM:E + 17)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

        ; 5] Tests with 24 inputs
        4                                                                                       :MSTORE(ecPairing_ninputs)
        32*6*4                                                                                  :MSTORE(txCalldataLen)
        -32                                                                                     :MSTORE(readXFromCalldataOffset)
        0 => E
        1153563745531144946586097928621095258348432585499389732309707300454996283289n           :MSTORE(MEM:E)
        7370404687973809887690049462468892748861464831518247317487007737601322454777n           :MSTORE(MEM:E+1)
        9376055848676368316410365621777214987372973768688270899357881297879508822452n           :MSTORE(MEM:E+2)
        19738309004667351906306506105426292998739264612662465709107894554928292805496n          :MSTORE(MEM:E+3)
        285143926121120094170748007008262512509578107228129423236125884572189904421n            :MSTORE(MEM:E+4)
        10279962913447536422932523162364510093030414102832227875578519449385249705476n          :MSTORE(MEM:E+5)
        8576791937965657966843713337336683588215881223744955532549571901036035091965n           :MSTORE(MEM:E+6)
        20999102966105130950411191886633074956452730563320480529699815227954081231322n          :MSTORE(MEM:E+7)
        9376055848676368316410365621777214987372973768688270899357881297879508822452n           :MSTORE(MEM:E+8)
        19738309004667351906306506105426292998739264612662465709107894554928292805496n          :MSTORE(MEM:E+9)
        285143926121120094170748007008262512509578107228129423236125884572189904421n            :MSTORE(MEM:E+10)
        10279962913447536422932523162364510093030414102832227875578519449385249705476n          :MSTORE(MEM:E+11)
        18556379486610508840908277815073629329531616761731760569700551412487192333649n          :MSTORE(MEM:E+12)
        17673868103043290791894327402153901008120365354485186198280340860768344163073n          :MSTORE(MEM:E+13)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(MEM:E+14)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(MEM:E+15)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(MEM:E+16)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(MEM:E+17)
        20364104435611758595377721340560864676183708759135257849771131236782155536356n          :MSTORE(MEM:E+18)
        6044194345605039714961350342623860353524318320217972076629496104743557530117n           :MSTORE(MEM:E+19)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(MEM:E+20)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(MEM:E+21)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(MEM:E+22)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(MEM:E+23)
                                                                                                :CALL(ecPairing)
        0 => A
        B                                                                                       :ASSERT
        1                                                                                       :MLOAD(ecPairing_result)

                                                                                                :JMP(finalizeExecution)

INCLUDE "../main/main.zkasm"