VAR GLOBAL test
; test valid for op-arith-final_0.json input
start:
    0 => E
    0x270b206cd7f7637a125ddc55aef59e54ef3ea0898dbc9b9094e5665fcd937bedn => A
    ; "0x270b206cd7f7637a125ddc55aef59e54ef3ea0898dbc9b9094e5665fcd937bed":
    ;"0x608060405234801561001057600080fd5b50600436106100885760003560e01c
    ;   806364fbb77c1161005b57806364fbb77c146100c75780636664f730146100d1
    ;   578063bfb371c2146100ed578063c68f6d1a146100f757610088565b80630e4d
    ;   2d021461008d5780631592781914610097578063242e46d2146100a157806339
    ;   31a6b3146100bd575b600080fd5b610095610101565b005b61009f61010d565b
    ;   005b6100bb60048036038101906100b69190610180565b610119565b005b6100
    ;   c561012f565b005b6100cf61013b565b005b6100eb60048036038101906100e6
    ;   9190610180565b61013d565b005b6100f5610153565b005b6100ff61015f565b
    ;   005b6002600a048060005550565b60026001018060005550565b808261012591
    ;   90610216565b6000819055505050565b60046003028060005550565b005b8082
    ;   61014991906101c0565b6000819055505050565b6002600a058060005550565b
    ;   60056006038060005550565b60008135905061017a816102b4565b9291505056
    ;   5b60008060408385031215610197576101966102af565b5b60006101a5858286
    ;   0161016b565b92505060206101b68582860161016b565b915050925092905056
    ;   5b60006101cb82610247565b91506101d683610247565b9250827fffffffffff
    ;   ffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561
    ;   020b5761020a610251565b5b828201905092915050565b600061022182610247
    ;   565b915061022c83610247565b92508261023c5761023b610280565b5b828204
    ;   905092915050565b6000819050919050565b7f4e487b71000000000000000000
    ;   00000000000000000000000000000000000000600052601160045260246000fd
    ;   5b7f4e487b710000000000000000000000000000000000000000000000000000
    ;   0000600052601260045260246000fd5b600080fd5b6102bd81610247565b8114
    ;   6102c857600080fd5b5056fea264697066735822122046eacdba7371636f1207
    ;   79f19da9f157d18a1c0bb321f5f890873de82d15f6ca64736f6c634300080700
    ;   33",

    ; load contract bytecode
    A               :HASHPDIGEST(E)

    1 => D
    0               :MSTORE(contractHashId)
    1 => PC
    0x80            :MSTORE(test)
    :CALL(readPush); in: [D: bytes to read] out: [E: value read]
    E               :MLOAD(test)

    31 => PC
    0x1c            :MSTORE(test)
    :CALL(readPush); in: [D: bytes to read] out: [E: value read]
    E               :MLOAD(test)

    480 => PC
    0xff            :MSTORE(test)
    :CALL(readPush); in: [D: bytes to read] out: [E: value read]
    E               :MLOAD(test)

    768 => PC
    0x33            :MSTORE(test)
    :CALL(readPush); in: [D: bytes to read] out: [E: value read]
    E               :MLOAD(test)

0 => A,B,C,D,E,CTX, SP, PC, GAS,  SR, HASHPOS, RR ; Set all registers to 0
                                                                        :JMP(finalizeExecution)

INCLUDE "../main/main.zkasm"
