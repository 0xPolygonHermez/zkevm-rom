INCLUDE "../initIncludes.zkasm"

start:
    1000000 => GAS

operation:
    2 => CTX
    1        :MSTORE(originCTX)
    2        :MSTORE(currentCTX)
    10000    :MSTORE(retCallLength)
    100      :MSTORE(SP++)
    1000     :MSTORE(SP++)
             :JMP(opREVERT)
checkCounters:
%OPREVERT_STEP - STEP:JMPN(failedCounters)
%OPREVERT_CNT_BINARY - CNT_BINARY :JMPNZ(failedCounters)
%OPREVERT_CNT_ARITH - CNT_ARITH :JMPNZ(failedCounters)
%OPREVERT_CNT_KECCAK_F - CNT_KECCAK_F :JMPNZ(failedCounters)
%OPREVERT_CNT_MEM_ALIGN - CNT_MEM_ALIGN :JMPNZ(failedCounters)
%OPREVERT_CNT_PADDING_PG - CNT_PADDING_PG :JMPNZ(failedCounters)
%OPREVERT_CNT_POSEIDON_G - CNT_POSEIDON_G :JMPNZ(failedCounters)

0 => A,B,C,D,E,CTX, SP, PC, GAS,  SR, HASHPOS, RR ; Set all registers to 0
finalizeExecution:
                                                                        :JMP(finalWait)
readCode:
txType:
    :JMP(checkCounters)
failedCounters:
2 => A
1       :ASSERT
INCLUDE "../endIncludes.zkasm"