INCLUDE "../initIncludes.zkasm"

start:
    1000000 => GAS

operation:
    2 => A
    2 => D
             :CALL(expAD)

    %EXPAD_STEP + 300 - STEP:JMPN(failedCounters)
    23 - CNT_BINARY :JMPNZ(failedCounters)
    ;%EXPAD_CNT_BINARY - CNT_BINARY :JMPNZ(failedCounters)
    5 - CNT_ARITH :JMPNZ(failedCounters)
    ;%EXPAD_CNT_ARITH - CNT_ARITH :JMPNZ(failedCounters)
    %EXPAD_CNT_KECCAK_F - CNT_KECCAK_F :JMPNZ(failedCounters)
    %EXPAD_CNT_MEM_ALIGN - CNT_MEM_ALIGN :JMPNZ(failedCounters)
    %EXPAD_CNT_PADDING_PG - CNT_PADDING_PG :JMPNZ(failedCounters)
    %EXPAD_CNT_POSEIDON_G - CNT_POSEIDON_G :JMPNZ(failedCounters)

0 => A,B,C,D,E,CTX, SP, PC, GAS,  SR, HASHPOS, RR ; Set all registers to 0
finalizeExecution:
                                                                        :JMP(finalWait)
readCode:
    :RETURN
failedCounters:
2 => A
1       :ASSERT

INCLUDE "../endIncludes.zkasm"
