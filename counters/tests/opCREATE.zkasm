INCLUDE "../initIncludes.zkasm"

start:
    1000000 => GAS

operation:
    1 => CTX
    50              :MSTORE(storageAddr)
    50 => A
    0 => B, C
    10000 => D
    $ => SR             :SSTORE
    43       :MSTORE(SP++)
    54       :MSTORE(SP++)
    1000     :MSTORE(SP++)
            :JMP(opCREATE)
checkCounters:
400 - STEP:JMPN(failedCounters)
23 - CNT_BINARY :JMPNZ(failedCounters)
4 - CNT_ARITH :JMPNZ(failedCounters)
%OPCREATE_CNT_KECCAK_F - CNT_KECCAK_F :JMPNZ(failedCounters)
2 - CNT_MEM_ALIGN :JMPNZ(failedCounters)
%OPCREATE_CNT_PADDING_PG - CNT_PADDING_PG :JMPNZ(failedCounters)
23 - CNT_POSEIDON_G :JMPNZ(failedCounters)

0 => A,B,C,D,E,CTX, SP, PC, GAS, MAXMEM, SR, HASHPOS, RR ; Set all registers to 0
finalizeExecution:
                                                                        :JMP(finalWait)
readCode:
txType:
    :JMP(checkCounters)
failedCounters:
2 => A
1       :ASSERT
INCLUDE "../endIncludes.zkasm"