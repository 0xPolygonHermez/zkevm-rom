; ZK_EVM
CONSTL %ADDRESS_GLOBAL_EXIT_ROOT_MANAGER_L2 = 0xa40D5f56745a118D0906a34E69aeC8C0Db1cB8fAn
CONSTL %ADDRESS_SYSTEM = 0x000000000000000000000000000000005ca1ab1en
CONST %CALLDATA_OFFSET = 1024
CONST %BATCH_DIFFICULTY = 0
CONST %TX_GAS_LIMIT = 30000000
CONST %GLOBAL_EXIT_ROOT_STORAGE_POS = 0
CONST %LOCAL_EXIT_ROOT_STORAGE_POS = 1
CONST %LAST_TX_STORAGE_POS = 0
CONST %STATE_ROOT_STORAGE_POS = 1
CONST %MAX_MEM_EXPANSION_BYTES = 0x3fffe0
CONST %FORK_ID = 4

; RLP
CONST %MIN_VALUE_SHORT = 128
CONST %MIN_BYTES_LONG = 56

; SMT STATE-TREE CONSTANT KEYS
CONST %SMT_KEY_BALANCE = 0
CONST %SMT_KEY_NONCE = 1
CONST %SMT_KEY_SC_CODE = 2
CONST %SMT_KEY_SC_STORAGE = 3
CONST %SMT_KEY_SC_LENGTH = 4

; SMT TOUCHED-TREE CONSTANT KEYS
CONST %SMT_KEY_TOUCHED_ADDR = 5
CONST %SMT_KEY_TOUCHED_SLOTS = 6

; GAS
CONST %BASE_TX_GAS = 21000
CONST %BASE_TX_DEPLOY_GAS = 53000
CONST %SLOAD_GAS = 100
CONST %GAS_QUICK_STEP = 2
CONST %GAS_FASTEST_STEP = 3
CONST %GAS_FAST_STEP = 5
CONST %GAS_MID_STEP = 8
CONST %GAS_SLOW_STEP = 10
CONST %GAS_EXT_STEP = 20
CONST %CALL_VALUE_TRANSFER_GAS = 9000 ; Paid for CALL when the value transfer is non-zero.
CONST %CALL_NEW_ACCOUNT_GAS = 25000 ; Paid for CALL when the destination address didn't exist prior.
CONST %CALL_STIPEND = 2300
CONST %ECRECOVER_GAS = 3000 ; Elliptic curve sender recovery gas price
CONST %IDENTITY_GAS = 15 ; Base price for a data copy operation
CONST %IDENTITY_WORD_GAS = 3 ; Per-work price for a data copy operation
CONST %KECCAK_GAS = 30 ; Once per KECCAK256 operation.
CONST %KECCAK_WORD_GAS = 6 ; Once per word of the KECCAK256 operation's data.
CONST %LOG_GAS = 375 ; Per LOG* operation.
CONST %LOG_TOPIC_GAS = 375 ; Per LOG topic operation.
CONST %JUMP_DEST_GAS = 1 ; Once per JUMPDEST operation.
CONST %WARM_STORGE_READ_GAS = 100 ; WarmStorageReadCostEIP2929
CONST %COLD_ACCOUNT_ACCESS_COST_REDUCED = 2500 ; ColdAccountAccessCostEIP2929 reduced(2600)
CONST %COLD_ACCOUNT_ACCESS_COST = 2600 ; ColdAccountAccessCostEIP2929
CONST %EXP_BYTE_GAS = 50 ; was raised to 50 during Eip158 (Spurious Dragon)
CONST %RETURN_GAS_COST = 200; 200 * returned_code_size
CONST %CREATE_GAS = 32000
CONST %CREATE_2_GAS = 32000
CONST %SENDALL_GAS = 5000
CONST %LOG_DATA_GAS = 8
; sstore
CONST %SSTORE_ENTRY_EIP_2200_GAS = 2300 ; Minimum gas required to be present for an SSTORE call, not consumed
CONST %SSTORE_SET_EIP_2200_GAS = 20000 ; Once per SSTORE operation from clean zero to non-zero
CONST %COLD_SLOAD_COST = 2100 ; Cost of using a cols memory slot
CONST %COLD_SLOAD_COST_REDUCED = 2000 ; Cost of using a cols memory slot reduced
CONST %SSTORE_DYNAMIC_GAS = 100
CONST %SSTORE_SET_GAS = 20000
CONST %SSTORE_SET_GAS_REDUCED = 19900 ; sstore gas cost reduced base_dynamic_gas(original_value == 0) - base_dynamic_gas(100)
CONST %SSTORE_RESET_GAS = 2900
CONST %SSTORE_RESET_GAS_REDUCED = 2800 ; sstore update gas cost reduced base_dynamic_gas(original_value == 0) - base_dynamic_gas(100)
CONST %SSTORE_CLEARS_SCHEDULE = 15000

; COUNTERS
CONST %MIN_STEPS_FINISH_BATCH = 200 ; min steps to finish tx
CONST %TOTAL_STEPS_LIMIT = 2**23

CONST %MAX_CNT_STEPS_LIMIT = %TOTAL_STEPS_LIMIT - %MIN_STEPS_FINISH_BATCH
CONST %MAX_CNT_ARITH_LIMIT = %TOTAL_STEPS_LIMIT / 32
CONST %MAX_CNT_BINARY_LIMIT = %TOTAL_STEPS_LIMIT / 16
CONST %MAX_CNT_MEM_ALIGN_LIMIT = %TOTAL_STEPS_LIMIT / 32
CONST %MAX_CNT_KECCAK_F_LIMIT = (%TOTAL_STEPS_LIMIT / 155286) * 44
CONST %MAX_CNT_PADDING_PG_LIMIT = (%TOTAL_STEPS_LIMIT / 56)
CONST %MAX_CNT_POSEIDON_G_LIMIT = (%TOTAL_STEPS_LIMIT / 30)

CONST %SAFE_RANGE = 20 ; safe guard counters to not take into account (%RANGE = 1 / SAFE_RANGE)

CONST %MAX_CNT_STEPS = %MAX_CNT_STEPS_LIMIT - (%MAX_CNT_STEPS_LIMIT / %SAFE_RANGE)
CONST %MAX_CNT_ARITH = %MAX_CNT_ARITH_LIMIT - (%MAX_CNT_ARITH_LIMIT / %SAFE_RANGE)
CONST %MAX_CNT_BINARY = %MAX_CNT_BINARY_LIMIT - (%MAX_CNT_BINARY_LIMIT / %SAFE_RANGE)
CONST %MAX_CNT_MEM_ALIGN = %MAX_CNT_MEM_ALIGN_LIMIT - (%MAX_CNT_MEM_ALIGN_LIMIT / %SAFE_RANGE)
CONST %MAX_CNT_KECCAK_F = %MAX_CNT_KECCAK_F_LIMIT - (%MAX_CNT_KECCAK_F_LIMIT / %SAFE_RANGE)
CONST %MAX_CNT_PADDING_PG = %MAX_CNT_PADDING_PG_LIMIT - (%MAX_CNT_PADDING_PG_LIMIT / %SAFE_RANGE)
CONST %MAX_CNT_POSEIDON_G = %MAX_CNT_POSEIDON_G_LIMIT - (%MAX_CNT_POSEIDON_G_LIMIT / %SAFE_RANGE)
CONST %MAX_CNT_POSEIDON_SLOAD_SSTORE = 257

CONST %MIN_CNT_KECCAK_BATCH = 1 ; minimum necessary keccaks to compute global hash

; ETHEREUM CONSTANTS
CONSTL %MAX_NONCE = 0xffffffffffffffffn
CONSTL %MAX_UINT_256 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn
CONST %CODE_SIZE_LIMIT = 0x6000
CONST %BYTECODE_STARTS_EF = 0xEF