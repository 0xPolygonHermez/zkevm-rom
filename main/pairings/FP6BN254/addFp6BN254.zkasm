;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; addFp6BN254:
;;             in: (a1 + a2·v + a3·v²),(b1 + b2·v + b3·v²) ∈ Fp6, where ai,bi ∈ Fp2
;;             out: (c1 + c2·v + c3·v²) = (a1+b1) + (a2+b2)·v + (a3+b3)·v² ∈ Fp6
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

VAR GLOBAL addFp6BN254_a1_x
VAR GLOBAL addFp6BN254_a1_y
VAR GLOBAL addFp6BN254_a2_x
VAR GLOBAL addFp6BN254_a2_y
VAR GLOBAL addFp6BN254_a3_x
VAR GLOBAL addFp6BN254_a3_y
VAR GLOBAL addFp6BN254_b1_x
VAR GLOBAL addFp6BN254_b1_y
VAR GLOBAL addFp6BN254_b2_x
VAR GLOBAL addFp6BN254_b2_y
VAR GLOBAL addFp6BN254_b3_x
VAR GLOBAL addFp6BN254_b3_y
VAR GLOBAL addFp6BN254_c1_x
VAR GLOBAL addFp6BN254_c1_y
VAR GLOBAL addFp6BN254_c2_x
VAR GLOBAL addFp6BN254_c2_y
VAR GLOBAL addFp6BN254_c3_x
VAR GLOBAL addFp6BN254_c3_y

VAR GLOBAL addFp6BN254_RR

; TODO: This is not sound, but correct
addFp6BN254:
        RR              :MSTORE(addFp6BN254_RR)

        $ => A          :MLOAD(addFp6BN254_a1_x)
        $ => B          :MLOAD(addFp6BN254_a1_y)
        $ => C          :MLOAD(addFp6BN254_b1_x)
        $ => D          :MLOAD(addFp6BN254_b1_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(addFp6BN254_c1_x)
        C               :MSTORE(addFp6BN254_c1_y)

        $ => A          :MLOAD(addFp6BN254_a2_x)
        $ => B          :MLOAD(addFp6BN254_a2_y)
        $ => C          :MLOAD(addFp6BN254_b2_x)
        $ => D          :MLOAD(addFp6BN254_b2_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(addFp6BN254_c2_x)
        C               :MSTORE(addFp6BN254_c2_y)
        
        $ => A          :MLOAD(addFp6BN254_a3_x)
        $ => B          :MLOAD(addFp6BN254_a3_y)
        $ => C          :MLOAD(addFp6BN254_b3_x)
        $ => D          :MLOAD(addFp6BN254_b3_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(addFp6BN254_c3_x)
        C               :MSTORE(addFp6BN254_c3_y)

        $ => RR         :MLOAD(addFp6BN254_RR)
                        :RETURN

; INCLUDE "../FP2BN254/addFp2BN254.zkasm"