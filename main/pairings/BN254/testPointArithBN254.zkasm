; constants needed by executor C++
CONST %N = 2**19
CONST %MAX_CNT_STEPS_LIMIT = %N
CONST %MAX_CNT_ARITH_LIMIT = %N
CONST %MAX_CNT_BINARY_LIMIT = %N
CONST %MAX_CNT_MEM_ALIGN_LIMIT = %N
CONST %MAX_CNT_KECCAK_F_LIMIT = %N
CONST %MAX_CNT_PADDING_PG_LIMIT = %N
CONST %MAX_CNT_POSEIDON_G_LIMIT = %N

INCLUDE "../constants.zkasm"

VAR GLOBAL lastHashKId
VAR GLOBAL lastHashPId

VAR GLOBAL initial_A
VAR GLOBAL initial_B
VAR GLOBAL initial_C
VAR GLOBAL initial_D
VAR GLOBAL initial_E
VAR GLOBAL initial_CTX
VAR GLOBAL initial_SP
VAR GLOBAL initial_PC
VAR GLOBAL initial_GAS
VAR GLOBAL initial_SR
VAR GLOBAL initial_RR
VAR GLOBAL initial_HASHPOS
VAR GLOBAL initial_RCX

start:

        STEP => A
        0 :ASSERT


        A           :MSTORE(initial_A)
        B           :MSTORE(initial_B)
        C           :MSTORE(initial_C)
        D           :MSTORE(initial_D)
        E           :MSTORE(initial_E)
        CTX         :MSTORE(initial_CTX)
        SP          :MSTORE(initial_SP)
        PC          :MSTORE(initial_PC)
        GAS         :MSTORE(initial_GAS)
        SR          :MSTORE(initial_SR)
        RR          :MSTORE(initial_RR)
        HASHPOS     :MSTORE(initial_HASHPOS)
        RCX         :MSTORE(initial_RCX)
        0 => A,B,C,D,E,CTX, SP, PC, GAS, SR, RR, HASHPOS, RCX

        -1          :MSTORE(lastHashKId)
        -1          :MSTORE(lastHashPId)


        ; 1] Point addition
        0n          :MSTORE(addPointBN254_P1_x1)
        0n          :MSTORE(addPointBN254_P1_x2)
        0n          :MSTORE(addPointBN254_P1_y1)
        0n          :MSTORE(addPointBN254_P1_y2)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(addPointBN254_P2_x1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(addPointBN254_P2_x2)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(addPointBN254_P2_y1)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(addPointBN254_P2_y2)
                                                                                                :CALL(addPointBN254)
        ${dump(mem.addPointBN254_P3_x1,mem.addPointBN254_P3_x2,mem.addPointBN254_P3_y1,mem.addPointBN254_P3_y2)}

        18029695676650738226693292988307914797657423701064905010927197838374790804409n          :MSTORE(addPointBN254_P1_x1)
        14583779054894525174450323658765874724019480979794335525732096752006891875705n          :MSTORE(addPointBN254_P1_x2)
        2140229616977736810657479771656733941598412651537078903776637920509952744750n           :MSTORE(addPointBN254_P1_y1)
        11474861747383700316476719153975578001603231366361248090558603872215261634898n          :MSTORE(addPointBN254_P1_y2)
        0n                                                                                      :MSTORE(addPointBN254_P2_x1)
        0n                                                                                      :MSTORE(addPointBN254_P2_x2)
        0n                                                                                      :MSTORE(addPointBN254_P2_y1)
        0n                                                                                      :MSTORE(addPointBN254_P2_y2)
                                                                                                :CALL(addPointBN254)
        ${dump(mem.addPointBN254_P3_x1,mem.addPointBN254_P3_x2,mem.addPointBN254_P3_y1,mem.addPointBN254_P3_y2)}

        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(addPointBN254_P1_x1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(addPointBN254_P1_x2)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(addPointBN254_P1_y1)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(addPointBN254_P1_y2)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(addPointBN254_P2_x1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(addPointBN254_P2_x2)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(addPointBN254_P2_y1)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(addPointBN254_P2_y2)
                                                                                                :CALL(addPointBN254)
        ${dump(mem.addPointBN254_P3_x1,mem.addPointBN254_P3_x2,mem.addPointBN254_P3_y1,mem.addPointBN254_P3_y2)}

        18029695676650738226693292988307914797657423701064905010927197838374790804409n          :MSTORE(addPointBN254_P1_x1)
        14583779054894525174450323658765874724019480979794335525732096752006891875705n          :MSTORE(addPointBN254_P1_x2)
        2140229616977736810657479771656733941598412651537078903776637920509952744750n           :MSTORE(addPointBN254_P1_y1)
        11474861747383700316476719153975578001603231366361248090558603872215261634898n          :MSTORE(addPointBN254_P1_y2)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(addPointBN254_P2_x1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(addPointBN254_P2_x2)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(addPointBN254_P2_y1)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(addPointBN254_P2_y2)
                                                                                                :CALL(addPointBN254)
        ${dump(mem.addPointBN254_P3_x1,mem.addPointBN254_P3_x2,mem.addPointBN254_P3_y1,mem.addPointBN254_P3_y2)}


        ; 2] Escalar multiplication
        0n                                                                                      :MSTORE(escalarMulBN254_k)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(escalarMulBN254_P_x1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(escalarMulBN254_P_x2)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(escalarMulBN254_P_y1)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(escalarMulBN254_P_y2)
                                                                                                :CALL(escalarMulBN254)
        ${dump(mem.escalarMulBN254_Q_x1,mem.escalarMulBN254_Q_x2,mem.escalarMulBN254_Q_y1,mem.escalarMulBN254_Q_y2)}

        147946756881789318990833708069417712966n                                                :MSTORE(escalarMulBN254_k)
        0n                                                                                      :MSTORE(escalarMulBN254_P_x1)
        0n                                                                                      :MSTORE(escalarMulBN254_P_x2)
        0n                                                                                      :MSTORE(escalarMulBN254_P_y1)
        0n                                                                                      :MSTORE(escalarMulBN254_P_y2)
                                                                                                :CALL(escalarMulBN254)
        ${dump(mem.escalarMulBN254_Q_x1,mem.escalarMulBN254_Q_x2,mem.escalarMulBN254_Q_y1,mem.escalarMulBN254_Q_y2)}

        147946756881789318990833708069417712966n                                                :MSTORE(escalarMulBN254_k)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(escalarMulBN254_P_x1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(escalarMulBN254_P_x2)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(escalarMulBN254_P_y1)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(escalarMulBN254_P_y2)
                                                                                                :CALL(escalarMulBN254)
        ${dump(mem.escalarMulBN254_Q_x1,mem.escalarMulBN254_Q_x2,mem.escalarMulBN254_Q_y1,mem.escalarMulBN254_Q_y2)}

        %BN254_R                                                                                :MSTORE(escalarMulBN254_k)
        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(escalarMulBN254_P_x1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(escalarMulBN254_P_x2)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(escalarMulBN254_P_y1)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(escalarMulBN254_P_y2)
                                                                                                :CALL(escalarMulBN254)
        ${dump(mem.escalarMulBN254_Q_x1,mem.escalarMulBN254_Q_x2,mem.escalarMulBN254_Q_y1,mem.escalarMulBN254_Q_y2)}

        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(lineSamePointsBN254_P_x1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(lineSamePointsBN254_P_x2)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(lineSamePointsBN254_P_y1)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(lineSamePointsBN254_P_y2)
        1n                                                                                      :MSTORE(lineSamePointsBN254_Q_x)
        2n                                                                                      :MSTORE(lineSamePointsBN254_Q_y)
                                                                                                :CALL(lineSamePointsBN254)
        ${dump(mem.lineSamePointsBN254_l11_x,mem.lineSamePointsBN254_l11_y,mem.lineSamePointsBN254_l13_x,mem.lineSamePointsBN254_l13_y,mem.lineSamePointsBN254_l22_x,mem.lineSamePointsBN254_l22_y)}

        10857046999023057135944570762232829481370756359578518086990519993285655852781n          :MSTORE(lineDiffPointsBN254_P1_x1)
        11559732032986387107991004021392285783925812861821192530917403151452391805634n          :MSTORE(lineDiffPointsBN254_P1_x2)
        8495653923123431417604973247489272438418190587263600148770280649306958101930n           :MSTORE(lineDiffPointsBN254_P1_y1)
        4082367875863433681332203403145435568316851327593401208105741076214120093531n           :MSTORE(lineDiffPointsBN254_P1_y2)
        18029695676650738226693292988307914797657423701064905010927197838374790804409n          :MSTORE(lineDiffPointsBN254_P2_x1)
        14583779054894525174450323658765874724019480979794335525732096752006891875705n          :MSTORE(lineDiffPointsBN254_P2_x2)
        2140229616977736810657479771656733941598412651537078903776637920509952744750n           :MSTORE(lineDiffPointsBN254_P2_y1)
        11474861747383700316476719153975578001603231366361248090558603872215261634898n          :MSTORE(lineDiffPointsBN254_P2_y2)
        1n                                                                                      :MSTORE(lineDiffPointsBN254_Q_x)
        2n                                                                                      :MSTORE(lineDiffPointsBN254_Q_y)
                                                                                                :CALL(lineDiffPointsBN254)
        ${dump(mem.lineDiffPointsBN254_l12_x,mem.lineDiffPointsBN254_l12_y,mem.lineDiffPointsBN254_l22_x,mem.lineDiffPointsBN254_l22_y,mem.lineDiffPointsBN254_l23_x,mem.lineDiffPointsBN254_l23_y)}

end:

        $ => A           :MLOAD(initial_A)
        $ => B           :MLOAD(initial_B)
        $ => C           :MLOAD(initial_C)
        $ => D           :MLOAD(initial_D)
        $ => E           :MLOAD(initial_E)
        $ => CTX         :MLOAD(initial_CTX)
        $ => SP          :MLOAD(initial_SP)
        $ => PC          :MLOAD(initial_PC)
        $ => GAS         :MLOAD(initial_GAS)
        $ => SR          :MLOAD(initial_SR)
        $ => RR          :MLOAD(initial_RR)
        $ => HASHPOS     :MLOAD(initial_HASHPOS)
        $ => RCX         :MLOAD(initial_RCX)

; label finalizeExecution needed by executor C++
finalizeExecution:
        ${beforeLast()}  : JMPN(finalizeExecution)

                         : JMP(start)
opINVALID:
; label checkAndSaveFrom needed by executor C++
checkAndSaveFrom:
                         :JMP(opINVALID)


INCLUDE "../FRBN254/reduceFrBN254.zkasm"
INCLUDE "../FPBN254/addFpBN254.zkasm"
INCLUDE "../FPBN254/subFpBN254.zkasm"
INCLUDE "../FPBN254/mulFpBN254.zkasm"
INCLUDE "../FP2BN254/addFp2BN254.zkasm"
INCLUDE "../FP2BN254/subFp2BN254.zkasm"
INCLUDE "../FP2BN254/escalarMulFp2BN254.zkasm"
INCLUDE "../FP2BN254/mulFp2BN254.zkasm"
INCLUDE "../FP2BN254/squareFp2BN254.zkasm"
INCLUDE "../FP2BN254/invFp2BN254.zkasm"
INCLUDE "addPointBN254.zkasm"
INCLUDE "escalarMulBN254.zkasm"
INCLUDE "lineSamePointsBN254.zkasm"
INCLUDE "lineDiffPointsBN254.zkasm"