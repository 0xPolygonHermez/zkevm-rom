;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Optimal Ate Pairing e: G1 x G2 -> GT over the BN254 curve
;; where G1 = E(Fp)[r] = E(Fp), G2 = E'(Fp2)[r] and GT = mu_r (the r-th roots of unity over (Fp12)^*)
;; the involved curves are E/Fp: y² = x³ + 3 and E'/Fp2: y² = x³ + 3/(9+u)
;;          input: P in G1 and Q in G2
;;          output: e(P,Q) in GT
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

VAR GLOBAL pairing_P_x
VAR GLOBAL pairing_P_x3 
VAR GLOBAL pairing_P_y
VAR GLOBAL pairing_Q_x1
VAR GLOBAL pairing_Q_x2
VAR GLOBAL pairing_Q_y1
VAR GLOBAL pairing_Q_y2

VAR GLOBAL pairing_R_x1
VAR GLOBAL pairing_R_x2
VAR GLOBAL pairing_R_y1
VAR GLOBAL pairing_R_y2
VAR GLOBAL pairing_f11_x
VAR GLOBAL pairing_f11_y
VAR GLOBAL pairing_f12_x
VAR GLOBAL pairing_f12_y
VAR GLOBAL pairing_f13_x
VAR GLOBAL pairing_f13_y
VAR GLOBAL pairing_f21_x
VAR GLOBAL pairing_f21_y
VAR GLOBAL pairing_f22_x
VAR GLOBAL pairing_f22_y
VAR GLOBAL pairing_f23_x
VAR GLOBAL pairing_f23_y

VAR GLOBAL pairing_RR

VAR GLOBAL psi_x1
VAR GLOBAL psi_x2
VAR GLOBAL psi_y1
VAR GLOBAL psi_y2 

INCLUDE "constants.zkasm"

; TODO
; ERROR CODES (B)
; 0 - no error
; 1 - P is not in G1
; 2 - Q is not in G2
; 3 - s is zero (0)
; 4 - s is too big
; 5 - v not valid value (1b, 1c)
; 6 - not exists sqrt of y
; 100 - fail sqrt, but has solution (!!!)

pairing:
    RR          :MSTORE(pairing_RR)
                :JMP(pairing_subgroup_checks)

; TODO: I think I check that Px,Py,Qx1,Qx2,Qy1,Qy2 are field elements before anything else, otherwise do the modulo 
; TODO: Do the proper branching for some of the points being 0
pairing_subgroup_checks:
    ; P in G1 iff (Py)² == (Px)³ + 3 (mod p)
    ; 1] Compute LHS and RHS
    $ => A,B    :MLOAD(pairing_P_x),CALL(mulFpBN254); C = (Px)²
    C => A                                         ; A = (Px)²
    $ => B      :MLOAD(pairing_P_x),CALL(mulFpBN254); C = (Px)³

    3n => A     :CALL(addFpBN254)                  ; C = (Px)³ + 3
    C           :MSTORE(pairing_P_x3)               ; pairing_P_x3 = (Px)³ + 3

    $ => A,B    :MLOAD(pairing_P_y),CALL(mulFpBN254); C = (Py)²

    ; 2] Check if LHS == RHS
    C => A
    $ => B      :MLOAD(pairing_P_x3) 
    $           :EQ,JMPNC(pairing_P_is_not_in_G1)

    ; Q in G2 iff psi(Q) == [6x²]Q as proven in Proposition 3 of 2022/352
    ; 1] Compute psi(Q)                   
    %BN254_P => A
    $ => B      :MLOAD(pairing_Q_x2)             
    $ => D      :SUB                                ; D = -Qx2
    %FROBENIUS_GAMMA121 => A
    %FROBENIUS_GAMMA122 => B
    $ => C      :MLOAD(pairing_Q_x1),CALL(mulFp2BN254)
    E           :MSTORE(psi_x1)
    C           :MSTORE(psi_x2)

    %BN254_P => A
    $ => B      :MLOAD(pairing_Q_y2)             
    $ => D      :SUB                                ; D = -Qx2
    %FROBENIUS_GAMMA131 => A
    %FROBENIUS_GAMMA132 => B
    $ => C      :MLOAD(pairing_Q_y1),CALL(mulFp2BN254)
    E           :MSTORE(psi_y1)
    C           :MSTORE(psi_y2)
    ; ${dump(2n == 2n && 1n == 1n)}
    ; 2] Compute [6x²]Q
    $ => A      :MLOAD(pairing_Q_x1)
    $ => B      :MLOAD(pairing_Q_x2)
    $ => C      :MLOAD(pairing_Q_y1)
    $ => D      :MLOAD(pairing_Q_y2)
    A           :MSTORE(escalarMulBN254_P_x1)
    B           :MSTORE(escalarMulBN254_P_x2)
    C           :MSTORE(escalarMulBN254_P_y1)
    D           :MSTORE(escalarMulBN254_P_y2)
    147946756881789318990833708069417712966n :MSTORE(escalarMulBN254_k) ; 6x²
                :CALL(escalarMulBN254)


    ; 3] Check if psi(Q) == [6x²]Q
    $ => A      :MLOAD(psi_x1)
    $ => B      :MLOAD(escalarMulBN254_Q_x1)
    $           :EQ,JMPNC(pairing_Q_is_not_in_G2)

    $ => A      :MLOAD(psi_x2)
    $ => B      :MLOAD(escalarMulBN254_Q_x2)
    $           :EQ,JMPNC(pairing_Q_is_not_in_G2)

    $ => A      :MLOAD(psi_y1)
    $ => B      :MLOAD(escalarMulBN254_Q_y1)
    $           :EQ,JMPNC(pairing_Q_is_not_in_G2)

    $ => A      :MLOAD(psi_y2)
    $ => B      :MLOAD(escalarMulBN254_Q_y2)
    $           :EQ,JMPNC(pairing_Q_is_not_in_G2)

    ; 0 => B      :JMP(pairing_end)

pairing_Miller_loop_init:
    65 => RCX

    ; Initiliaze Miller loop with R = Q and f = 1
    $ => A      :MLOAD(pairing_Q_x1)
    $ => B      :MLOAD(pairing_Q_x2)
    $ => C      :MLOAD(pairing_Q_y1)
    $ => D      :MLOAD(pairing_Q_y2)
    A           :MSTORE(pairing_R_x1)
    B           :MSTORE(pairing_R_x2)
    C           :MSTORE(pairing_R_y1)
    D           :MSTORE(pairing_R_y2)
    1n          :MSTORE(pairing_f11_x)

pairing_Miller_loop:
    RCX - 1 => RCX    :JMPZ(pairing_end)











; ERRORS
pairing_P_is_not_in_G1:
    1 => B      :JMP(pairing_error)

pairing_Q_is_not_in_G2:
    2 => B      :JMP(pairing_error)

pairing_error:
        0 => A

pairing_end:
        $ => RR     :MLOAD(pairing_RR)
        ${dump(B)}
        :RETURN

; INCLUDE "addFpBN254.zkasm"
INCLUDE "mulFpBN254.zkasm"
; INCLUDE "./FP2BN254/mulFp2BN254.zkasm"
INCLUDE "./BN254/escalarMulBN254.zkasm"