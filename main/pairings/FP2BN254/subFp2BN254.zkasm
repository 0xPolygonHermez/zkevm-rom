;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; subFp2BN254:
;;             in: (A + B·u), (C + D·u) ∈ Fp2, where A,B,C,D ∈ Fp
;;             out: E + C·u = (A - C) + (B - D)·u ∈ Fp2
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

VAR GLOBAL subFp2BN254_B
VAR GLOBAL subFp2BN254_C
VAR GLOBAL subFp2BN254_D

VAR GLOBAL subFp2BN254_RR

subFp2BN254:
        RR      :MSTORE(subFp2BN254_RR)

        B       :MSTORE(subFp2BN254_B)
        D       :MSTORE(subFp2BN254_D)

        ; 1] Compute A - C
                :CALL(subFpBN254)
        C       :MSTORE(subFp2BN254_C)

        ; 2] Compute B - D
        $ => A  :MLOAD(subFp2BN254_B)
        $ => C  :MLOAD(subFp2BN254_D)
                :CALL(subFpBN254)

        $ => E  :MLOAD(subFp2BN254_C)

        $ => RR         :MLOAD(subFp2BN254_RR)
                        :RETURN

; ; Trusted version, for testing purposes only
; VAR GLOBAL subFp2BN254_A
; VAR GLOBAL subFp2BN254_B
; VAR GLOBAL subFp2BN254_C
; VAR GLOBAL subFp2BN254_D

; subFp2BN254:
;         A       :MSTORE(subFp2BN254_A)
;         B       :MSTORE(subFp2BN254_B)
;         C       :MSTORE(subFp2BN254_C)
;         D       :MSTORE(subFp2BN254_D)

;         ; A·B + C = [D]·2²⁵⁶ + [E]
;         0n => A,B,C,D
;         0n => E         :ARITH

;         $ => A       :MLOAD(subFp2BN254_A)
;         $ => B       :MLOAD(subFp2BN254_B)
;         $ => C       :MLOAD(subFp2BN254_C)
;         $ => D       :MLOAD(subFp2BN254_D)

;         ${fpBN254sub(A,C)} => E
;         ${fpBN254sub(B,D)} => C

;                         :RETURN