;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; addFp2BN254:
;;             in: (A + B·u), (C + D·u) ∈ Fp2, where A,B,C,D ∈ Fp
;;             out: E + C·u = (A + C) + (B + D)·u ∈ Fp2
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

VAR GLOBAL addFp2BN254_B
VAR GLOBAL addFp2BN254_C
VAR GLOBAL addFp2BN254_D

VAR GLOBAL addFp2BN254_RR

addFp2BN254:
        RR      :MSTORE(addFp2BN254_RR)

        B       :MSTORE(addFp2BN254_B)
        D       :MSTORE(addFp2BN254_D)

        ; 1] Compute A + C
                :CALL(addFpBN254)
        C       :MSTORE(addFp2BN254_C)

        ; 2] Compute B + D
        $ => A  :MLOAD(addFp2BN254_B)
        $ => C  :MLOAD(addFp2BN254_D)
                :CALL(addFpBN254)

        $ => E  :MLOAD(addFp2BN254_C)
        
        $ => RR         :MLOAD(addFp2BN254_RR)
                        :RETURN


; ; Trusted version, for testing purposes only
; VAR GLOBAL addFp2BN254_A
; VAR GLOBAL addFp2BN254_B
; VAR GLOBAL addFp2BN254_C
; VAR GLOBAL addFp2BN254_D

; addFp2BN254:
;         A       :MSTORE(addFp2BN254_A)
;         B       :MSTORE(addFp2BN254_B)
;         C       :MSTORE(addFp2BN254_C)
;         D       :MSTORE(addFp2BN254_D)

;         ; A·B + C = [D]·2²⁵⁶ + [E]
;         0n => A,B,C,D
;         0n => E         :ARITH

;         $ => A       :MLOAD(addFp2BN254_A)
;         $ => B       :MLOAD(addFp2BN254_B)
;         $ => C       :MLOAD(addFp2BN254_C)
;         $ => D       :MLOAD(addFp2BN254_D)

;         ${fpBN254add(A,C)} => E
;         ${fpBN254add(B,D)} => C

;                         :RETURN