; constants needed by executor C++
CONST %N = 2**19
CONST %MAX_CNT_STEPS_LIMIT = %N
CONST %MAX_CNT_ARITH_LIMIT = %N
CONST %MAX_CNT_BINARY_LIMIT = %N
CONST %MAX_CNT_MEM_ALIGN_LIMIT = %N
CONST %MAX_CNT_KECCAK_F_LIMIT = %N
CONST %MAX_CNT_PADDING_PG_LIMIT = %N
CONST %MAX_CNT_POSEIDON_G_LIMIT = %N

CONSTL %FP_C = 21888242871839275222246405745257275088696311157297823662689037894645226208583n

VAR GLOBAL lastHashKId
VAR GLOBAL lastHashPId

VAR GLOBAL initial_A
VAR GLOBAL initial_B
VAR GLOBAL initial_C
VAR GLOBAL initial_D
VAR GLOBAL initial_E
VAR GLOBAL initial_CTX
VAR GLOBAL initial_SP
VAR GLOBAL initial_PC
VAR GLOBAL initial_GAS
VAR GLOBAL initial_SR
VAR GLOBAL initial_RR
VAR GLOBAL initial_HASHPOS
VAR GLOBAL initial_RCX

start:

        STEP => A
        0 :ASSERT


        A           :MSTORE(initial_A)
        B           :MSTORE(initial_B)
        C           :MSTORE(initial_C)
        D           :MSTORE(initial_D)
        E           :MSTORE(initial_E)
        CTX         :MSTORE(initial_CTX)
        SP          :MSTORE(initial_SP)
        PC          :MSTORE(initial_PC)
        GAS         :MSTORE(initial_GAS)
        SR          :MSTORE(initial_SR)
        RR          :MSTORE(initial_RR)
        HASHPOS     :MSTORE(initial_HASHPOS)
        RCX         :MSTORE(initial_RCX)
        0 => A,B,C,D,E,CTX, SP, PC, GAS, SR, RR, HASHPOS, RCX

        -1          :MSTORE(lastHashKId)
        -1          :MSTORE(lastHashPId)

                    :JMP(init)
redundantCheck:
        ${(A*C) >= (B*D) ? (((A*C)-(B*D)) % const.FP_C) : (const.FP_C - (((B*D)-(A*C)) % const.FP_C))  } => E
        ${((A*D)+(B*C)) % const.FP_C} :ARITH_BN254_MULFP2

        ${ARITH_BN254_MULFP2_X(A,B,C,D)} => E
        ${ARITH_BN254_MULFP2_Y(A,B,C,D)} :ARITH_BN254_MULFP2

        :RETURN


init:
        ${dump(CNT_ARITH)}

        0 => A,B,C,D,E  :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        1 => A,B,C,D
        0 => E
        2           :ARITH_BN254_MULFP2


        ${(A*C) >= (B*D) ? (((A*C)-(B*D)) % const.FP_C) : (const.FP_C - (((B*D)-(A*C)) % const.FP_C))  } => E
        ${((A*D)+(B*C)) % const.FP_C} :ARITH_BN254_MULFP2

        27522224640574525727508869631115729782366268903789464522n => A
        9464522620859275222246405745257275088696311157297823662n => B
        21888242871839275222246405745257275088696311157297823662n => C
        927522224640574525727508869631115729782366268903789464522620858n => D
        14891678705599587052340331775776488372735337212274145035224832670536732661119n => E
        11325708394979255639649532387914717429213882039868976203025798344095314286423n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        2999113016370801447448637477310555551699411366746876888402482806647931650955n => A
        15111836776712714633472521107426170732646708720491125290424115686452538044788n => B
        1615640209694347989024567018706328391116430477872687075840266591062548700110n => C
        1361179629352358267333550734567663993971386151768430307761609245213368478601n => D
        14770108568400661627344491382221266934697249925926056743840649076610879893045n => E
        5627833292961490797850767608180671190401497143375619480399900577431965641170n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        19056371982582167475593876340225319134850470258276413387066558886464698322210n => A
        20914269056602289532121456290808074920610800738424321255588157751277776260456n => B
        10634756649036098220049242607700175280465139227303175868315978071819374369450n => C
        10707315989258942200484412153631767731310293817155149881083576310392120779817n => D
        6318223991054368946559297627683880368950174368355797725875485258221673806558n => E
        20927827967729763008003188722716125385003437275025385819663827355264470031029n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        17439296149470651955399191622773763934734095199211718365410414983381309759864n => A
        13373501719163473472841041788504156690548383160832239692705104418225040546854n => B
        2866102972456271079967693190994148543367180063637893133241380333416566770443n => C
        17507150703593091179260006606111902033252116738425947814013976030826760340088n => D
        5419444201741909981924572770314753957666251818568806885568268908712420548120n => E
        5313010952507160492512855205480976794615232628845276729126028085524182563476n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        10474021739025925932785928731057203470917859260988012564714012471518727308608n => A
        6338187455997332132605156933512585760641763976004436657187920430294343752715n => B
        6475980579478677576684459816370306528085724315611555389395716648859900516600n => C
        6103770441505827039226012739324368008932137504351034680550554911354633643402n => D
        6658158721270501885445831025912632971865332388185965580075833284864915763071n => E
        3820207916312911233126596981949774596507977318684144779687618358625745836172n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        13035654309185072747007684899608188564738180212873843624120098867068659728379n => A
        14304510650501135230770200049037997501161624700690638244767896840233539997021n => B
        1254522566763643765518141339826574316876596975171694605176987103074390318626n => C
        21865911826269625017932701701554322194779621143559233503634932475964203801698n => D
        3896131797198029229368697849730318518166380785412931662086329170073928036285n => E
        10900779348125211007702792775515845116225811638755450018833111966010148542428n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        2461466524536061550339181353212015521462274663804793738545776528032343767724n => A
        14279857303122277929122171225581539676447880100806450816662950153862355043067n => B
        10677698019904304413362206508628545451239797883902566541820043776169994991238n => C
        6027754328827188358079420890098393565885966458283709242833777097841682926427n => D
        1121791956917830003587541222537308695471804364339828373124565775842334440693n => E
        3785307395228473389430666068363916336702111189234341729461852205701952710989n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        138826511351159327237431406645218469792228779423591846788088579129301438600n => A
        10089820941352009655622737406538873385399158068321996168314921591561303625427n => B
        20645371170960535603921534856721014539288435278222660642135668426679626515931n => C
        1576241632396731897618617265168143028312344467934592563257912942622117021847n => D
        10724657346483854998203333507762321252244963163417870257682147445387328202616n => E
        21631284154039188691985385731461057394245998641526424513226670851453157497772n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        19480032858599349237783739348857222898900985826623279208013807997533177831349n => A
        21630444695768116512365032858267470528576164245213349347830255620368276117931n => B
        16322101046935066186280288176517090342422396611448788940925337347235910062601n => C
        8405301844789429109003953345703925291788605787954685727209642739103427451357n => D
        8500480975375788145124578423798250741646942527082019980086230744327191365962n => E
        8281497055748431531878059850443775823604138589831646382011747312282519220522n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        8279176438218218101317736458812046719029759513136611258705774745931768461256n => A
        9362486483192325253707795252004845051132306326244875553694069791619655071971n => B
        16636602270147592436099839267995412007762493323489851213306204892790148326206n => C
        21456551282858136055393172051335867452225170134977771502424168466799226916474n => D
        10869541591342938898911075418816883048686822470788823754801991430982038233877n => E
        3761357797873695656140035726530991723034908099029252731534909110720028370596n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        21013165940349711590804640157754084232415898489763484115487409886935251766813n => A
        20398557100608727082768711435464713620372286029308252256259842527014206510587n => B
        5135291992952316672867243702373043725268231953202952303295397600268619298758n => C
        7711663949017021656757420710572368884621968601161543401056959791369131705451n => D
        16618475300514724804954676501621358256921064142530231502434580221648426970323n => E
        18861620570050175941886138122749280035158809523249609941055216876527253748122n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        7802749448203350996553316612407949749581043505762467160361662239145921287212n => A
        11908441232079727165976055981948582184832610178121943911277897277425131617523n => B
        7394421574903366328028623190912377055837054768620632411838375654799652347683n => C
        5753007918473130019591276545904511214340216123596976813280744367440338448829n => D
        12184099959992077802535042349134105330581137061195559800560767680145227732778n => E
        18001162349092585372666200691696042219297107974885765888364510950627329157268n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        3213816781616397671686965302147637570172145420338600032641393742383178340709n => A
        9159369281061838250513815658806397994903387555927392848527881999279829241092n => B
        1570614512386131497091694539141510562071466374104867472304697568390544858673n => C
        3028329571581865740331102887241480864607028228100264322539606376688159498061n => D
        17378212475453227688211437878613098994827923451469473653932633567954529488578n => E
        12357879666134024657873384963149483600084566986873414378917126649946872837902n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        0n => A
        20461646802298906980762583770860915677116535487874170572552628192653608014730n => B
        6992781226881595625739967127142000520977098989512983986793047316871483459918n => C
        1378664412189966417004884240232329428343584286374831951394319038115267215211n => D
        19902686769527869254969204706369735809880243021651335060946412801396652215458n => E
        4345862814012463971301253591719771256260060004933485905655384273574682660075n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        8185294398670857206588387453006456912211107202444686619085770886559782939833n => A
        0n => B
        20430345858968609673351474973766446317558778020642244131730714986194551525821n => C
        3003141308976916826947433012885630474801049592871161473113707392201592535716n => D
        2338223029964045193673124068835077963787771413882420353611337070783524617587n => E
        19712143223465889964325718172905380028538706865947062566960948550913178223198n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        19161049757122130269379804349801115723326823420863114519014390733160342246998n => A
        13615253125279716961815379356918687191433028139889485610239584740287529516760n => B
        0n => C
        9186799348640615165090642464739742804207214968625748747967213089636966092042n => D
        16240383961354344732251034640767073716179354390407538894039714208244174483047n => E
        20408466453246395486485959305447881078567888864721545563317786957623406889125n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        20530596605376994910007569173016238557447322979422639258302340622059080394453n => A
        13817132582425877466415083224775808689552025130277905327859870628768938090276n => B
        17997268041396051959441677056635319964274407682764321547780102319863176442806n => C
        0n => D
        259797799952855454172962447225818928985645682816773263611844586984167847882n => E
        2170213940337537765736188879013519058328400186840027870496569362924773894057n :ARITH_BN254_MULFP2

                        :CALL(redundantCheck)

        21888242871839275222246405745257275088696311157297823662689037894645226208582n => A
        21888242871839275222246405745257275088696311157297823662689037894645226208582n => B
        21888242871839275222246405745257275088696311157297823662689037894645226208582n => C
        21888242871839275222246405745257275088696311157297823662689037894645226208582n => D
        0n => E
        2n :ARITH_BN254_MULFP2


        ${dumpRegs()}
        ${dump(CNT_ARITH)}

end:

        $ => A           :MLOAD(initial_A)
        $ => B           :MLOAD(initial_B)
        $ => C           :MLOAD(initial_C)
        $ => D           :MLOAD(initial_D)
        $ => E           :MLOAD(initial_E)
        $ => CTX         :MLOAD(initial_CTX)
        $ => SP          :MLOAD(initial_SP)
        $ => PC          :MLOAD(initial_PC)
        $ => GAS         :MLOAD(initial_GAS)
        $ => SR          :MLOAD(initial_SR)
        $ => RR          :MLOAD(initial_RR)
        $ => HASHPOS     :MLOAD(initial_HASHPOS)
        $ => RCX         :MLOAD(initial_RCX)

; label finalizeExecution needed by executor C++
finalizeExecution:
        ${beforeLast()}  : JMPN(finalizeExecution)

                         : JMP(start)
opINVALID:
; label checkAndSaveFrom needed by executor C++
checkAndSaveFrom:
                         :JMP(opINVALID)
