; constants needed by executor C++
CONST %N = 2**19
CONST %MAX_CNT_STEPS_LIMIT = %N
CONST %MAX_CNT_ARITH_LIMIT = %N
CONST %MAX_CNT_BINARY_LIMIT = %N
CONST %MAX_CNT_MEM_ALIGN_LIMIT = %N
CONST %MAX_CNT_KECCAK_F_LIMIT = %N
CONST %MAX_CNT_PADDING_PG_LIMIT = %N
CONST %MAX_CNT_POSEIDON_G_LIMIT = %N

CONSTL %BN254_P = 21888242871839275222246405745257275088696311157297823662689037894645226208583n 
CONSTL %FROBENIUS_GAMMA111 = 8376118865763821496583973867626364092589906065868298776909617916018768340080n
CONSTL %FROBENIUS_GAMMA112 = 16469823323077808223889137241176536799009286646108169935659301613961712198316n
CONSTL %FROBENIUS_GAMMA121 = 21575463638280843010398324269430826099269044274347216827212613867836435027261n
CONSTL %FROBENIUS_GAMMA122 = 10307601595873709700152284273816112264069230130616436755625194854815875713954n
CONSTL %FROBENIUS_GAMMA131 = 2821565182194536844548159561693502659359617185244120367078079554186484126554n
CONSTL %FROBENIUS_GAMMA132 = 3505843767911556378687030309984248845540243509899259641013678093033130930403n
CONSTL %FROBENIUS_GAMMA141 = 2581911344467009335267311115468803099551665605076196740867805258568234346338n
CONSTL %FROBENIUS_GAMMA142 = 19937756971775647987995932169929341994314640652964949448313374472400716661030n
CONSTL %FROBENIUS_GAMMA151 = 685108087231508774477564247770172212460312782337200605669322048753928464687n
CONSTL %FROBENIUS_GAMMA152 = 8447204650696766136447902020341177575205426561248465145919723016860428151883n
CONSTL %FROBENIUS_GAMMA21 = 21888242871839275220042445260109153167277707414472061641714758635765020556617n
CONSTL %FROBENIUS_GAMMA22 = 21888242871839275220042445260109153167277707414472061641714758635765020556616n
CONSTL %FROBENIUS_GAMMA23 = 21888242871839275222246405745257275088696311157297823662689037894645226208582n
CONSTL %FROBENIUS_GAMMA24 = 2203960485148121921418603742825762020974279258880205651966n
CONSTL %FROBENIUS_GAMMA25 = 2203960485148121921418603742825762020974279258880205651967n
CONSTL %FROBENIUS_GAMMA311 = 11697423496358154304825782922584725312912383441159505038794027105778954184319n
CONSTL %FROBENIUS_GAMMA312 = 303847389135065887422783454877609941456349188919719272345083954437860409601n
CONSTL %FROBENIUS_GAMMA321 = 3772000881919853776433695186713858239009073593817195771773381919316419345261n
CONSTL %FROBENIUS_GAMMA322 = 2236595495967245188281701248203181795121068902605861227855261137820944008926n
CONSTL %FROBENIUS_GAMMA331 = 19066677689644738377698246183563772429336693972053703295610958340458742082029n
CONSTL %FROBENIUS_GAMMA332 = 18382399103927718843559375435273026243156067647398564021675359801612095278180n
CONSTL %FROBENIUS_GAMMA341 = 5324479202449903542726783395506214481928257762400643279780343368557297135718n
CONSTL %FROBENIUS_GAMMA342 = 16208900380737693084919495127334387981393726419856888799917914180988844123039n
CONSTL %FROBENIUS_GAMMA351 = 8941241848238582420466759817324047081148088512956452953208002715982955420483n
CONSTL %FROBENIUS_GAMMA352 = 10338197737521362862238855242243140895517409139741313354160881284257516364953n

VAR GLOBAL test

VAR GLOBAL lastHashKId
VAR GLOBAL lastHashPId

VAR GLOBAL initial_A
VAR GLOBAL initial_B
VAR GLOBAL initial_C
VAR GLOBAL initial_D
VAR GLOBAL initial_E
VAR GLOBAL initial_CTX
VAR GLOBAL initial_SP
VAR GLOBAL initial_PC
VAR GLOBAL initial_GAS
VAR GLOBAL initial_SR
VAR GLOBAL initial_RR
VAR GLOBAL initial_HASHPOS
VAR GLOBAL initial_RCX

start:

        STEP => A
        0 :ASSERT


        A           :MSTORE(initial_A)
        B           :MSTORE(initial_B)
        C           :MSTORE(initial_C)
        D           :MSTORE(initial_D)
        E           :MSTORE(initial_E)
        CTX         :MSTORE(initial_CTX)
        SP          :MSTORE(initial_SP)
        PC          :MSTORE(initial_PC)
        GAS         :MSTORE(initial_GAS)
        SR          :MSTORE(initial_SR)
        RR          :MSTORE(initial_RR)
        HASHPOS     :MSTORE(initial_HASHPOS)
        RCX         :MSTORE(initial_RCX)
        0 => A,B,C,D,E,CTX, SP, PC, GAS, SR, RR, HASHPOS, RCX

        -1          :MSTORE(lastHashKId)
        -1          :MSTORE(lastHashPId)


        ; 10n             :MSTORE(addFp12BN254_a11_x)
        ; 2n              :MSTORE(addFp12BN254_a11_y)
        ; 5n              :MSTORE(addFp12BN254_a12_x)
        ; 13n             :MSTORE(addFp12BN254_a12_y)
        ; 7n              :MSTORE(addFp12BN254_a13_x)
        ; 5n              :MSTORE(addFp12BN254_a13_y)
        ; 10n             :MSTORE(addFp12BN254_a21_x)
        ; 2n              :MSTORE(addFp12BN254_a21_y)
        ; 5n              :MSTORE(addFp12BN254_a22_x)
        ; 13n             :MSTORE(addFp12BN254_a22_y)
        ; 7n              :MSTORE(addFp12BN254_a23_x)
        ; 5n              :MSTORE(addFp12BN254_a23_y)
        ; 78n             :MSTORE(addFp12BN254_b11_x)
        ; 5n              :MSTORE(addFp12BN254_b11_y)
        ; 3n              :MSTORE(addFp12BN254_b12_x)
        ; 193n             :MSTORE(addFp12BN254_b12_y)
        ; 20n              :MSTORE(addFp12BN254_b13_x)
        ; 2n              :MSTORE(addFp12BN254_b13_y)
        ; 1n             :MSTORE(addFp12BN254_b21_x)
        ; 0n              :MSTORE(addFp12BN254_b21_y)
        ; 0n              :MSTORE(addFp12BN254_b22_x)
        ; 3n             :MSTORE(addFp12BN254_b22_y)
        ; 69n              :MSTORE(addFp12BN254_b23_x)
        ; 27n              :MSTORE(addFp12BN254_b23_y)
        ;                 :CALL(addFp12BN254)
        ; ${dump(mem.addFp12BN254_c11_x,mem.addFp12BN254_c11_y,mem.addFp12BN254_c12_x,mem.addFp12BN254_c12_y,mem.addFp12BN254_c13_x,mem.addFp12BN254_c13_y)}
        ; ${dump(mem.addFp12BN254_c21_x,mem.addFp12BN254_c21_y,mem.addFp12BN254_c22_x,mem.addFp12BN254_c22_y,mem.addFp12BN254_c23_x,mem.addFp12BN254_c23_y)}

        ; 10n             :MSTORE(subFp12BN254_a11_x)
        ; 2n              :MSTORE(subFp12BN254_a11_y)
        ; 5n              :MSTORE(subFp12BN254_a12_x)
        ; 13n             :MSTORE(subFp12BN254_a12_y)
        ; 7n              :MSTORE(subFp12BN254_a13_x)
        ; 5n              :MSTORE(subFp12BN254_a13_y)
        ; 10n             :MSTORE(subFp12BN254_a21_x)
        ; 2n              :MSTORE(subFp12BN254_a21_y)
        ; 5n              :MSTORE(subFp12BN254_a22_x)
        ; 13n             :MSTORE(subFp12BN254_a22_y)
        ; 7n              :MSTORE(subFp12BN254_a23_x)
        ; 5n              :MSTORE(subFp12BN254_a23_y)
        ; 78n             :MSTORE(subFp12BN254_b11_x)
        ; 5n              :MSTORE(subFp12BN254_b11_y)
        ; 3n              :MSTORE(subFp12BN254_b12_x)
        ; 193n             :MSTORE(subFp12BN254_b12_y)
        ; 20n              :MSTORE(subFp12BN254_b13_x)
        ; 2n              :MSTORE(subFp12BN254_b13_y)
        ; 1n             :MSTORE(subFp12BN254_b21_x)
        ; 0n              :MSTORE(subFp12BN254_b21_y)
        ; 0n              :MSTORE(subFp12BN254_b22_x)
        ; 3n             :MSTORE(subFp12BN254_b22_y)
        ; 69n              :MSTORE(subFp12BN254_b23_x)
        ; 27n              :MSTORE(subFp12BN254_b23_y)
        ;                 :CALL(subFp12BN254)
        ; ${dump(mem.subFp12BN254_c11_x,mem.subFp12BN254_c11_y,mem.subFp12BN254_c12_x,mem.subFp12BN254_c12_y,mem.subFp12BN254_c13_x,mem.subFp12BN254_c13_y)}
        ; ${dump(mem.subFp12BN254_c21_x,mem.subFp12BN254_c21_y,mem.subFp12BN254_c22_x,mem.subFp12BN254_c22_y,mem.subFp12BN254_c23_x,mem.subFp12BN254_c23_y)}

        ; 10n             :MSTORE(mulFp12BN254_a11_x)
        ; 2n              :MSTORE(mulFp12BN254_a11_y)
        ; 5n              :MSTORE(mulFp12BN254_a12_x)
        ; 13n             :MSTORE(mulFp12BN254_a12_y)
        ; 7n              :MSTORE(mulFp12BN254_a13_x)
        ; 5n              :MSTORE(mulFp12BN254_a13_y)
        ; 10n             :MSTORE(mulFp12BN254_a21_x)
        ; 2n              :MSTORE(mulFp12BN254_a21_y)
        ; 5n              :MSTORE(mulFp12BN254_a22_x)
        ; 13n             :MSTORE(mulFp12BN254_a22_y)
        ; 7n              :MSTORE(mulFp12BN254_a23_x)
        ; 5n              :MSTORE(mulFp12BN254_a23_y)
        ; 78n             :MSTORE(mulFp12BN254_b11_x)
        ; 5n              :MSTORE(mulFp12BN254_b11_y)
        ; 3n              :MSTORE(mulFp12BN254_b12_x)
        ; 193n             :MSTORE(mulFp12BN254_b12_y)
        ; 20n              :MSTORE(mulFp12BN254_b13_x)
        ; 2n              :MSTORE(mulFp12BN254_b13_y)
        ; 1n             :MSTORE(mulFp12BN254_b21_x)
        ; 0n              :MSTORE(mulFp12BN254_b21_y)
        ; 0n              :MSTORE(mulFp12BN254_b22_x)
        ; 3n             :MSTORE(mulFp12BN254_b22_y)
        ; 69n              :MSTORE(mulFp12BN254_b23_x)
        ; 27n              :MSTORE(mulFp12BN254_b23_y)
        ;                 :CALL(mulFp12BN254)
        ; ${dump(mem.mulFp12BN254_c11_x,mem.mulFp12BN254_c11_y,mem.mulFp12BN254_c12_x,mem.mulFp12BN254_c12_y,mem.mulFp12BN254_c13_x,mem.mulFp12BN254_c13_y)}
        ; ${dump(mem.mulFp12BN254_c21_x,mem.mulFp12BN254_c21_y,mem.mulFp12BN254_c22_x,mem.mulFp12BN254_c22_y,mem.mulFp12BN254_c23_x,mem.mulFp12BN254_c23_y)}

        ; 2n             :MSTORE(mulFp12BN254_a11_x)
        ; 4n              :MSTORE(mulFp12BN254_a11_y)
        ; 0n              :MSTORE(mulFp12BN254_a12_x)
        ; 0n             :MSTORE(mulFp12BN254_a12_y)
        ; 0n              :MSTORE(mulFp12BN254_a13_x)
        ; 5n              :MSTORE(mulFp12BN254_a13_y)
        ; 5n             :MSTORE(mulFp12BN254_a21_x)
        ; 10n              :MSTORE(mulFp12BN254_a21_y)
        ; 20n              :MSTORE(mulFp12BN254_a22_x)
        ; 30n             :MSTORE(mulFp12BN254_a22_y)
        ; 7n              :MSTORE(mulFp12BN254_a23_x)
        ; 69n              :MSTORE(mulFp12BN254_a23_y)
        ; 78n             :MSTORE(mulFp12BN254_b11_x)
        ; 14n              :MSTORE(mulFp12BN254_b11_y)
        ; 2n              :MSTORE(mulFp12BN254_b12_x)
        ; 1n             :MSTORE(mulFp12BN254_b12_y)
        ; 2n              :MSTORE(mulFp12BN254_b13_x)
        ; 10n              :MSTORE(mulFp12BN254_b13_y)
        ; 100n             :MSTORE(mulFp12BN254_b21_x)
        ; 99n              :MSTORE(mulFp12BN254_b21_y)
        ; 88n              :MSTORE(mulFp12BN254_b22_x)
        ; 77n             :MSTORE(mulFp12BN254_b22_y)
        ; 20n              :MSTORE(mulFp12BN254_b23_x)
        ; 2n              :MSTORE(mulFp12BN254_b23_y)
        ;                 :CALL(mulFp12BN254)
        ; ${dump(mem.mulFp12BN254_c11_x,mem.mulFp12BN254_c11_y,mem.mulFp12BN254_c12_x,mem.mulFp12BN254_c12_y,mem.mulFp12BN254_c13_x,mem.mulFp12BN254_c13_y)}
        ; ${dump(mem.mulFp12BN254_c21_x,mem.mulFp12BN254_c21_y,mem.mulFp12BN254_c22_x,mem.mulFp12BN254_c22_y,mem.mulFp12BN254_c23_x,mem.mulFp12BN254_c23_y)}

        ; 2n             :MSTORE(squareFp12BN254_a11_x)
        ; 4n              :MSTORE(squareFp12BN254_a11_y)
        ; 0n              :MSTORE(squareFp12BN254_a12_x)
        ; 0n             :MSTORE(squareFp12BN254_a12_y)
        ; 0n              :MSTORE(squareFp12BN254_a13_x)
        ; 5n              :MSTORE(squareFp12BN254_a13_y)
        ; 5n             :MSTORE(squareFp12BN254_a21_x)
        ; 10n              :MSTORE(squareFp12BN254_a21_y)
        ; 20n              :MSTORE(squareFp12BN254_a22_x)
        ; 30n             :MSTORE(squareFp12BN254_a22_y)
        ; 7n              :MSTORE(squareFp12BN254_a23_x)
        ; 69n              :MSTORE(squareFp12BN254_a23_y)
        ;                 :CALL(squareFp12BN254)
        ; ${dump(mem.squareFp12BN254_c11_x,mem.squareFp12BN254_c11_y,mem.squareFp12BN254_c12_x,mem.squareFp12BN254_c12_y,mem.squareFp12BN254_c13_x,mem.squareFp12BN254_c13_y)}
        ; ${dump(mem.squareFp12BN254_c21_x,mem.squareFp12BN254_c21_y,mem.squareFp12BN254_c22_x,mem.squareFp12BN254_c22_y,mem.squareFp12BN254_c23_x,mem.squareFp12BN254_c23_y)}

        ; 12879671296228341798957541889042068293248913689212425431224938470232546313254n             :MSTORE(squareFp12BN254_a11_x)
        ; 3326450555199805883965490851796414254830144151329718176108864533289444035270n              :MSTORE(squareFp12BN254_a11_y)
        ; 20034916004680903865371475524544157810838259782601065778963371780592670397755n              :MSTORE(squareFp12BN254_a12_x)
        ; 18196221800554323016660057972017335112712278872243164622794778048181747904770n             :MSTORE(squareFp12BN254_a12_y)
        ; 2650685350723162073065693030364953757603657135232283880472468071129041178893n              :MSTORE(squareFp12BN254_a13_x)
        ; 1415534485628002925645978830263295545820817030311522411523977773123510463790n              :MSTORE(squareFp12BN254_a13_y)
        ; 11706129207700151979042100288958216850158405562525260961392090752318820540155n             :MSTORE(squareFp12BN254_a21_x)
        ; 13581688218243497693010389261307054804658398598414171976249347555990073884710n              :MSTORE(squareFp12BN254_a21_y)
        ; 865661210072615391091663782916883487315505694294592934212781713437127182959n              :MSTORE(squareFp12BN254_a22_x)
        ; 5364456672142552956341240304849409513108281743490635067211876654163672173225n             :MSTORE(squareFp12BN254_a22_y)
        ; 11182696274116283149832659131689911508224992839995672842130064887471806829782n              :MSTORE(squareFp12BN254_a23_x)
        ; 13862086431460254638576437312497952755826436162922426416336796129991391475329n              :MSTORE(squareFp12BN254_a23_y)
        ;                 :CALL(squareFp12BN254)
        ; ${dump(mem.squareFp12BN254_c11_x,mem.squareFp12BN254_c11_y,mem.squareFp12BN254_c12_x,mem.squareFp12BN254_c12_y,mem.squareFp12BN254_c13_x,mem.squareFp12BN254_c13_y)}
        ; ${dump(mem.squareFp12BN254_c21_x,mem.squareFp12BN254_c21_y,mem.squareFp12BN254_c22_x,mem.squareFp12BN254_c22_y,mem.squareFp12BN254_c23_x,mem.squareFp12BN254_c23_y)}

        ; 12879671296228341798957541889042068293248913689212425431224938470232546313254n             :MSTORE(fastSquareFp12BN254_a11_x)
        ; 3326450555199805883965490851796414254830144151329718176108864533289444035270n              :MSTORE(fastSquareFp12BN254_a11_y)
        ; 20034916004680903865371475524544157810838259782601065778963371780592670397755n              :MSTORE(fastSquareFp12BN254_a12_x)
        ; 18196221800554323016660057972017335112712278872243164622794778048181747904770n             :MSTORE(fastSquareFp12BN254_a12_y)
        ; 2650685350723162073065693030364953757603657135232283880472468071129041178893n              :MSTORE(fastSquareFp12BN254_a13_x)
        ; 1415534485628002925645978830263295545820817030311522411523977773123510463790n              :MSTORE(fastSquareFp12BN254_a13_y)
        ; 11706129207700151979042100288958216850158405562525260961392090752318820540155n             :MSTORE(fastSquareFp12BN254_a21_x)
        ; 13581688218243497693010389261307054804658398598414171976249347555990073884710n              :MSTORE(fastSquareFp12BN254_a21_y)
        ; 865661210072615391091663782916883487315505694294592934212781713437127182959n              :MSTORE(fastSquareFp12BN254_a22_x)
        ; 5364456672142552956341240304849409513108281743490635067211876654163672173225n             :MSTORE(fastSquareFp12BN254_a22_y)
        ; 11182696274116283149832659131689911508224992839995672842130064887471806829782n              :MSTORE(fastSquareFp12BN254_a23_x)
        ; 13862086431460254638576437312497952755826436162922426416336796129991391475329n              :MSTORE(fastSquareFp12BN254_a23_y)
        ;                 :CALL(fastSquareFp12BN254)
        ; ${dump(mem.fastSquareFp12BN254_c11_x,mem.fastSquareFp12BN254_c11_y,mem.fastSquareFp12BN254_c12_x,mem.fastSquareFp12BN254_c12_y,mem.fastSquareFp12BN254_c13_x,mem.fastSquareFp12BN254_c13_y)}
        ; ${dump(mem.fastSquareFp12BN254_c21_x,mem.fastSquareFp12BN254_c21_y,mem.fastSquareFp12BN254_c22_x,mem.fastSquareFp12BN254_c22_y,mem.fastSquareFp12BN254_c23_x,mem.fastSquareFp12BN254_c23_y)}

        ; 2n             :MSTORE(inverseFp12BN254_a11_x)
        ; 4n              :MSTORE(inverseFp12BN254_a11_y)
        ; 0n              :MSTORE(inverseFp12BN254_a12_x)
        ; 0n             :MSTORE(inverseFp12BN254_a12_y)
        ; 0n              :MSTORE(inverseFp12BN254_a13_x)
        ; 5n              :MSTORE(inverseFp12BN254_a13_y)
        ; 5n             :MSTORE(inverseFp12BN254_a21_x)
        ; 10n              :MSTORE(inverseFp12BN254_a21_y)
        ; 20n              :MSTORE(inverseFp12BN254_a22_x)
        ; 30n             :MSTORE(inverseFp12BN254_a22_y)
        ; 7n              :MSTORE(inverseFp12BN254_a23_x)
        ; 69n              :MSTORE(inverseFp12BN254_a23_y)
        ;                 :CALL(inverseFp12BN254)
        ; ${dump(mem.inverseFp12BN254_c11_x,mem.inverseFp12BN254_c11_y,mem.inverseFp12BN254_c12_x,mem.inverseFp12BN254_c12_y,mem.inverseFp12BN254_c13_x,mem.inverseFp12BN254_c13_y)}
        ; ${dump(mem.inverseFp12BN254_c21_x,mem.inverseFp12BN254_c21_y,mem.inverseFp12BN254_c22_x,mem.inverseFp12BN254_c22_y,mem.inverseFp12BN254_c23_x,mem.inverseFp12BN254_c23_y)}

        ; 2n             :MSTORE(frobFp12BN254_a11_x)
        ; 4n              :MSTORE(frobFp12BN254_a11_y)
        ; 0n              :MSTORE(frobFp12BN254_a12_x)
        ; 0n             :MSTORE(frobFp12BN254_a12_y)
        ; 0n              :MSTORE(frobFp12BN254_a13_x)
        ; 5n              :MSTORE(frobFp12BN254_a13_y)
        ; 5n             :MSTORE(frobFp12BN254_a21_x)
        ; 10n              :MSTORE(frobFp12BN254_a21_y)
        ; 20n              :MSTORE(frobFp12BN254_a22_x)
        ; 30n             :MSTORE(frobFp12BN254_a22_y)
        ; 7n              :MSTORE(frobFp12BN254_a23_x)
        ; 69n              :MSTORE(frobFp12BN254_a23_y)
        ;                 :CALL(frobFp12BN254)
        ; ${dump(mem.frobFp12BN254_c11_x,mem.frobFp12BN254_c11_y,mem.frobFp12BN254_c12_x,mem.frobFp12BN254_c12_y,mem.frobFp12BN254_c13_x,mem.frobFp12BN254_c13_y)}
        ; ${dump(mem.frobFp12BN254_c21_x,mem.frobFp12BN254_c21_y,mem.frobFp12BN254_c22_x,mem.frobFp12BN254_c22_y,mem.frobFp12BN254_c23_x,mem.frobFp12BN254_c23_y)}

        ; 2n             :MSTORE(frob2Fp12BN254_a11_x)
        ; 4n              :MSTORE(frob2Fp12BN254_a11_y)
        ; 0n              :MSTORE(frob2Fp12BN254_a12_x)
        ; 0n             :MSTORE(frob2Fp12BN254_a12_y)
        ; 0n              :MSTORE(frob2Fp12BN254_a13_x)
        ; 5n              :MSTORE(frob2Fp12BN254_a13_y)
        ; 5n             :MSTORE(frob2Fp12BN254_a21_x)
        ; 10n              :MSTORE(frob2Fp12BN254_a21_y)
        ; 20n              :MSTORE(frob2Fp12BN254_a22_x)
        ; 30n             :MSTORE(frob2Fp12BN254_a22_y)
        ; 7n              :MSTORE(frob2Fp12BN254_a23_x)
        ; 69n              :MSTORE(frob2Fp12BN254_a23_y)
        ;                 :CALL(frob2Fp12BN254)
        ; ${dump(mem.frob2Fp12BN254_c11_x,mem.frob2Fp12BN254_c11_y,mem.frob2Fp12BN254_c12_x,mem.frob2Fp12BN254_c12_y,mem.frob2Fp12BN254_c13_x,mem.frob2Fp12BN254_c13_y)}
        ; ${dump(mem.frob2Fp12BN254_c21_x,mem.frob2Fp12BN254_c21_y,mem.frob2Fp12BN254_c22_x,mem.frob2Fp12BN254_c22_y,mem.frob2Fp12BN254_c23_x,mem.frob2Fp12BN254_c23_y)}

        ; 2n             :MSTORE(frob3Fp12BN254_a11_x)
        ; 4n              :MSTORE(frob3Fp12BN254_a11_y)
        ; 0n              :MSTORE(frob3Fp12BN254_a12_x)
        ; 0n             :MSTORE(frob3Fp12BN254_a12_y)
        ; 0n              :MSTORE(frob3Fp12BN254_a13_x)
        ; 5n              :MSTORE(frob3Fp12BN254_a13_y)
        ; 5n             :MSTORE(frob3Fp12BN254_a21_x)
        ; 10n              :MSTORE(frob3Fp12BN254_a21_y)
        ; 20n              :MSTORE(frob3Fp12BN254_a22_x)
        ; 30n             :MSTORE(frob3Fp12BN254_a22_y)
        ; 7n              :MSTORE(frob3Fp12BN254_a23_x)
        ; 69n              :MSTORE(frob3Fp12BN254_a23_y)
        ;                 :CALL(frob3Fp12BN254)
        ; ${dump(mem.frob3Fp12BN254_c11_x,mem.frob3Fp12BN254_c11_y,mem.frob3Fp12BN254_c12_x,mem.frob3Fp12BN254_c12_y,mem.frob3Fp12BN254_c13_x,mem.frob3Fp12BN254_c13_y)}
        ; ${dump(mem.frob3Fp12BN254_c21_x,mem.frob3Fp12BN254_c21_y,mem.frob3Fp12BN254_c22_x,mem.frob3Fp12BN254_c22_y,mem.frob3Fp12BN254_c23_x,mem.frob3Fp12BN254_c23_y)}


        ; 167n              :MSTORE(expFp12BN254_e)
        ; 2n              :MSTORE(expFp12BN254_a11_x)
        ; 4n              :MSTORE(expFp12BN254_a11_y)
        ; 0n              :MSTORE(expFp12BN254_a12_x)
        ; 0n              :MSTORE(expFp12BN254_a12_y)
        ; 0n              :MSTORE(expFp12BN254_a13_x)
        ; 5n              :MSTORE(expFp12BN254_a13_y)
        ; 5n              :MSTORE(expFp12BN254_a21_x)
        ; 10n             :MSTORE(expFp12BN254_a21_y)
        ; 20n             :MSTORE(expFp12BN254_a22_x)
        ; 30n             :MSTORE(expFp12BN254_a22_y)
        ; 7n              :MSTORE(expFp12BN254_a23_x)
        ; 69n             :MSTORE(expFp12BN254_a23_y)
        ;                 :CALL(expFp12BN254)
        ; ${dump(mem.expFp12BN254_c11_x,mem.expFp12BN254_c11_y,mem.expFp12BN254_c12_x,mem.expFp12BN254_c12_y,mem.expFp12BN254_c13_x,mem.expFp12BN254_c13_y)}
        ; ${dump(mem.expFp12BN254_c21_x,mem.expFp12BN254_c21_y,mem.expFp12BN254_c22_x,mem.expFp12BN254_c22_y,mem.expFp12BN254_c23_x,mem.expFp12BN254_c23_y)}


        ; 123456789n                                                                              :MSTORE(expFp12BN254_e)
        ; 12879671296228341798957541889042068293248913689212425431224938470232546313254n          :MSTORE(expFp12BN254_a11_x)
        ; 3326450555199805883965490851796414254830144151329718176108864533289444035270n           :MSTORE(expFp12BN254_a11_y)
        ; 20034916004680903865371475524544157810838259782601065778963371780592670397755n          :MSTORE(expFp12BN254_a12_x)
        ; 18196221800554323016660057972017335112712278872243164622794778048181747904770n          :MSTORE(expFp12BN254_a12_y)
        ; 2650685350723162073065693030364953757603657135232283880472468071129041178893n           :MSTORE(expFp12BN254_a13_x)
        ; 1415534485628002925645978830263295545820817030311522411523977773123510463790n           :MSTORE(expFp12BN254_a13_y)
        ; 11706129207700151979042100288958216850158405562525260961392090752318820540155n          :MSTORE(expFp12BN254_a21_x)
        ; 13581688218243497693010389261307054804658398598414171976249347555990073884710n          :MSTORE(expFp12BN254_a21_y)
        ; 865661210072615391091663782916883487315505694294592934212781713437127182959n            :MSTORE(expFp12BN254_a22_x)
        ; 5364456672142552956341240304849409513108281743490635067211876654163672173225n           :MSTORE(expFp12BN254_a22_y)
        ; 11182696274116283149832659131689911508224992839995672842130064887471806829782n          :MSTORE(expFp12BN254_a23_x)
        ; 13862086431460254638576437312497952755826436162922426416336796129991391475329n          :MSTORE(expFp12BN254_a23_y)
        ;                 :CALL(expFp12BN254)
        ; ${dump(mem.expFp12BN254_c11_x,mem.expFp12BN254_c11_y,mem.expFp12BN254_c12_x,mem.expFp12BN254_c12_y,mem.expFp12BN254_c13_x,mem.expFp12BN254_c13_y)}
        ; ${dump(mem.expFp12BN254_c21_x,mem.expFp12BN254_c21_y,mem.expFp12BN254_c22_x,mem.expFp12BN254_c22_y,mem.expFp12BN254_c23_x,mem.expFp12BN254_c23_y)}

        123456789n                                                                              :MSTORE(fastExpFp12BN254_e)
        12879671296228341798957541889042068293248913689212425431224938470232546313254n          :MSTORE(fastExpFp12BN254_a11_x)
        3326450555199805883965490851796414254830144151329718176108864533289444035270n           :MSTORE(fastExpFp12BN254_a11_y)
        20034916004680903865371475524544157810838259782601065778963371780592670397755n          :MSTORE(fastExpFp12BN254_a12_x)
        18196221800554323016660057972017335112712278872243164622794778048181747904770n          :MSTORE(fastExpFp12BN254_a12_y)
        2650685350723162073065693030364953757603657135232283880472468071129041178893n           :MSTORE(fastExpFp12BN254_a13_x)
        1415534485628002925645978830263295545820817030311522411523977773123510463790n           :MSTORE(fastExpFp12BN254_a13_y)
        11706129207700151979042100288958216850158405562525260961392090752318820540155n          :MSTORE(fastExpFp12BN254_a21_x)
        13581688218243497693010389261307054804658398598414171976249347555990073884710n          :MSTORE(fastExpFp12BN254_a21_y)
        865661210072615391091663782916883487315505694294592934212781713437127182959n            :MSTORE(fastExpFp12BN254_a22_x)
        5364456672142552956341240304849409513108281743490635067211876654163672173225n           :MSTORE(fastExpFp12BN254_a22_y)
        11182696274116283149832659131689911508224992839995672842130064887471806829782n          :MSTORE(fastExpFp12BN254_a23_x)
        13862086431460254638576437312497952755826436162922426416336796129991391475329n          :MSTORE(fastExpFp12BN254_a23_y)
                        :CALL(fastExpFp12BN254)
        ${dump(mem.fastExpFp12BN254_c11_x,mem.fastExpFp12BN254_c11_y,mem.fastExpFp12BN254_c12_x,mem.fastExpFp12BN254_c12_y,mem.fastExpFp12BN254_c13_x,mem.fastExpFp12BN254_c13_y)}
        ${dump(mem.fastExpFp12BN254_c21_x,mem.fastExpFp12BN254_c21_y,mem.fastExpFp12BN254_c22_x,mem.fastExpFp12BN254_c22_y,mem.fastExpFp12BN254_c23_x,mem.fastExpFp12BN254_c23_y)}

end:

        $ => A           :MLOAD(initial_A)
        $ => B           :MLOAD(initial_B)
        $ => C           :MLOAD(initial_C)
        $ => D           :MLOAD(initial_D)
        $ => E           :MLOAD(initial_E)
        $ => CTX         :MLOAD(initial_CTX)
        $ => SP          :MLOAD(initial_SP)
        $ => PC          :MLOAD(initial_PC)
        $ => GAS         :MLOAD(initial_GAS)
        $ => SR          :MLOAD(initial_SR)
        $ => RR          :MLOAD(initial_RR)
        $ => HASHPOS     :MLOAD(initial_HASHPOS)
        $ => RCX         :MLOAD(initial_RCX)

; label finalizeExecution needed by executor C++
finalizeExecution:
        ${beforeLast()}  : JMPN(finalizeExecution)

                         : JMP(start)
opINVALID:
; label checkAndSaveFrom needed by executor C++
checkAndSaveFrom:
                         :JMP(opINVALID)

INCLUDE "addFp12BN254.zkasm"
INCLUDE "subFp12BN254.zkasm"
INCLUDE "mulFp12BN254.zkasm"
INCLUDE "squareFp12BN254.zkasm"
INCLUDE "fastSquareFp12BN254.zkasm"
INCLUDE "fastExpFp12BN254.zkasm"
INCLUDE "inverseFp12BN254.zkasm"
INCLUDE "expFp12BN254.zkasm"
INCLUDE "frobFp12BN254.zkasm"
INCLUDE "frob2Fp12BN254.zkasm"
INCLUDE "frob3Fp12BN254.zkasm"
INCLUDE "../FP6BN254/addFp6BN254.zkasm"
INCLUDE "../FP6BN254/subFp6BN254.zkasm"
INCLUDE "../FP6BN254/mulFp6BN254.zkasm"
INCLUDE "../FP6BN254/squareFp6BN254.zkasm"
INCLUDE "../FP6BN254/inverseFp6BN254.zkasm"
INCLUDE "../FP4BN254/squareFp4BN254.zkasm"
INCLUDE "../FP2BN254/addFp2BN254.zkasm"
INCLUDE "../FP2BN254/subFp2BN254.zkasm"
INCLUDE "../FP2BN254/mulFp2BN254.zkasm"
INCLUDE "../FP2BN254/squareFp2BN254.zkasm"
INCLUDE "../FP2BN254/invFp2BN254.zkasm"
INCLUDE "../FP2BN254/escalarMulFp2BN254.zkasm"
INCLUDE "../FPBN254/addFpBN254.zkasm"
INCLUDE "../FPBN254/subFpBN254.zkasm"