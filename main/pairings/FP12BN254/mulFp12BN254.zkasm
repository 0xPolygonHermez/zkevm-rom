;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; mulFp12BN254:
;;             in: (a1 + a2·w),(b1 + b2·w) ∈ Fp12, where ai,bi ∈ Fp6
;;             out: (c1 + c2·w) ∈ Fp12, where:
;;                  - c1 = a1·b1 + a2·b2·v
;;                  - c2 = (a1+a2)·(b1+b2) - a1·b1 - a2·b2
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; TODO: Implement Fp12 addition and subtraction

VAR GLOBAL mulFp12BN254_a11_x
VAR GLOBAL mulFp12BN254_a11_y
VAR GLOBAL mulFp12BN254_a12_x
VAR GLOBAL mulFp12BN254_a12_y
VAR GLOBAL mulFp12BN254_a13_x
VAR GLOBAL mulFp12BN254_a13_y
VAR GLOBAL mulFp12BN254_a21_x
VAR GLOBAL mulFp12BN254_a21_y
VAR GLOBAL mulFp12BN254_a22_x
VAR GLOBAL mulFp12BN254_a22_y
VAR GLOBAL mulFp12BN254_a23_x
VAR GLOBAL mulFp12BN254_a23_y
VAR GLOBAL mulFp12BN254_b11_x
VAR GLOBAL mulFp12BN254_b11_y
VAR GLOBAL mulFp12BN254_b12_x
VAR GLOBAL mulFp12BN254_b12_y
VAR GLOBAL mulFp12BN254_b13_x
VAR GLOBAL mulFp12BN254_b13_y
VAR GLOBAL mulFp12BN254_b21_x
VAR GLOBAL mulFp12BN254_b21_y
VAR GLOBAL mulFp12BN254_b22_x
VAR GLOBAL mulFp12BN254_b22_y
VAR GLOBAL mulFp12BN254_b23_x
VAR GLOBAL mulFp12BN254_b23_y
VAR GLOBAL mulFp12BN254_c11_x
VAR GLOBAL mulFp12BN254_c11_y
VAR GLOBAL mulFp12BN254_c12_x
VAR GLOBAL mulFp12BN254_c12_y
VAR GLOBAL mulFp12BN254_c13_x
VAR GLOBAL mulFp12BN254_c13_y
VAR GLOBAL mulFp12BN254_c21_x
VAR GLOBAL mulFp12BN254_c21_y
VAR GLOBAL mulFp12BN254_c22_x
VAR GLOBAL mulFp12BN254_c22_y
VAR GLOBAL mulFp12BN254_c23_x
VAR GLOBAL mulFp12BN254_c23_y

VAR GLOBAL mulFp12BN254_a1b1mul1_x
VAR GLOBAL mulFp12BN254_a1b1mul1_y
VAR GLOBAL mulFp12BN254_a1b1mul2_x
VAR GLOBAL mulFp12BN254_a1b1mul2_y
VAR GLOBAL mulFp12BN254_a1b1mul3_x
VAR GLOBAL mulFp12BN254_a1b1mul3_y
VAR GLOBAL mulFp12BN254_a2b2mul1_x
VAR GLOBAL mulFp12BN254_a2b2mul1_y
VAR GLOBAL mulFp12BN254_a2b2mul2_x
VAR GLOBAL mulFp12BN254_a2b2mul2_y
VAR GLOBAL mulFp12BN254_a2b2mul3_x
VAR GLOBAL mulFp12BN254_a2b2mul3_y

VAR GLOBAL mulFp12BN254_a1a2sum_x
VAR GLOBAL mulFp12BN254_a1a2sum_y
VAR GLOBAL mulFp12BN254_b1b2sum_x
VAR GLOBAL mulFp12BN254_b1b2sum_y

VAR GLOBAL mulFp12BN254_RR

; TODO: This is not sound, but correct
mulFp12BN254:
        RR              :MSTORE(mulFp12BN254_RR)

        ; 1] a1·b1
        $ => A          :MLOAD(mulFp12BN254_a11_x)
        $ => B          :MLOAD(mulFp12BN254_a11_y)
        A               :MSTORE(mulFp6BN254_a1_x)
        B               :MSTORE(mulFp6BN254_a1_y)
        $ => A          :MLOAD(mulFp12BN254_a12_x)
        $ => B          :MLOAD(mulFp12BN254_a12_y)
        A               :MSTORE(mulFp6BN254_a2_x)
        B               :MSTORE(mulFp6BN254_a2_y)
        $ => A          :MLOAD(mulFp12BN254_a13_x)
        $ => B          :MLOAD(mulFp12BN254_a13_y)
        A               :MSTORE(mulFp6BN254_a3_x)
        B               :MSTORE(mulFp6BN254_a3_y)

        $ => A          :MLOAD(mulFp12BN254_b11_x)
        $ => B          :MLOAD(mulFp12BN254_b11_y)
        A               :MSTORE(mulFp6BN254_b1_x)
        B               :MSTORE(mulFp6BN254_b1_y)
        $ => A          :MLOAD(mulFp12BN254_b12_x)
        $ => B          :MLOAD(mulFp12BN254_b12_y)
        A               :MSTORE(mulFp6BN254_b2_x)
        B               :MSTORE(mulFp6BN254_b2_y)
        $ => A          :MLOAD(mulFp12BN254_b13_x)
        $ => B          :MLOAD(mulFp12BN254_b13_y)
        A               :MSTORE(mulFp6BN254_b3_x)
        B               :MSTORE(mulFp6BN254_b3_y)
                        :CALL(mulFp6BN254)
        $ => A          :MLOAD(mulFp6BN254_c1_x)
        $ => B          :MLOAD(mulFp6BN254_c1_y)
        A               :MSTORE(mulFp12BN254_a1b1mul1_x)
        B               :MSTORE(mulFp12BN254_a1b1mul1_y)
        $ => A          :MLOAD(mulFp6BN254_c2_x)
        $ => B          :MLOAD(mulFp6BN254_c2_y)
        A               :MSTORE(mulFp12BN254_a1b1mul2_x)
        B               :MSTORE(mulFp12BN254_a1b1mul2_y)
        $ => A          :MLOAD(mulFp6BN254_c3_x)
        $ => B          :MLOAD(mulFp6BN254_c3_y)
        A               :MSTORE(mulFp12BN254_a1b1mul3_x)
        B               :MSTORE(mulFp12BN254_a1b1mul3_y)

        ; 1] a2·b2
        $ => A          :MLOAD(mulFp12BN254_a21_x)
        $ => B          :MLOAD(mulFp12BN254_a21_y)
        A               :MSTORE(mulFp6BN254_a1_x)
        B               :MSTORE(mulFp6BN254_a1_y)
        $ => A          :MLOAD(mulFp12BN254_a22_x)
        $ => B          :MLOAD(mulFp12BN254_a22_y)
        A               :MSTORE(mulFp6BN254_a2_x)
        B               :MSTORE(mulFp6BN254_a2_y)
        $ => A          :MLOAD(mulFp12BN254_a23_x)
        $ => B          :MLOAD(mulFp12BN254_a23_y)
        A               :MSTORE(mulFp6BN254_a3_x)
        B               :MSTORE(mulFp6BN254_a3_y)

        $ => A          :MLOAD(mulFp12BN254_b21_x)
        $ => B          :MLOAD(mulFp12BN254_b21_y)
        A               :MSTORE(mulFp6BN254_b1_x)
        B               :MSTORE(mulFp6BN254_b1_y)
        $ => A          :MLOAD(mulFp12BN254_b22_x)
        $ => B          :MLOAD(mulFp12BN254_b22_y)
        A               :MSTORE(mulFp6BN254_b2_x)
        B               :MSTORE(mulFp6BN254_b2_y)
        $ => A          :MLOAD(mulFp12BN254_b23_x)
        $ => B          :MLOAD(mulFp12BN254_b23_y)
        A               :MSTORE(mulFp6BN254_b3_x)
        B               :MSTORE(mulFp6BN254_b3_y)
                        :CALL(mulFp6BN254)
        $ => A          :MLOAD(mulFp6BN254_c1_x)
        $ => B          :MLOAD(mulFp6BN254_c1_y)
        A               :MSTORE(mulFp12BN254_a2b2mul1_x)
        B               :MSTORE(mulFp12BN254_a2b2mul1_y)
        $ => A          :MLOAD(mulFp6BN254_c2_x)
        $ => B          :MLOAD(mulFp6BN254_c2_y)
        A               :MSTORE(mulFp12BN254_a2b2mul2_x)
        B               :MSTORE(mulFp12BN254_a2b2mul2_y)
        $ => A          :MLOAD(mulFp6BN254_c3_x)
        $ => B          :MLOAD(mulFp6BN254_c3_y)
        A               :MSTORE(mulFp12BN254_a2b2mul3_x)
        B               :MSTORE(mulFp12BN254_a2b2mul3_y)

        ; 2] a1+a2
        $ => A          :MLOAD(mulFp12BN254_a2_x)
        $ => B          :MLOAD(mulFp12BN254_a2_y)
        $ => C          :MLOAD(mulFp12BN254_a3_x)
        $ => D          :MLOAD(mulFp12BN254_a3_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(mulFp12BN254_a2a3sum_x)
        C               :MSTORE(mulFp12BN254_a2a3sum_y)

        $ => A          :MLOAD(mulFp12BN254_b2_x)
        $ => B          :MLOAD(mulFp12BN254_b2_y)
        $ => C          :MLOAD(mulFp12BN254_b3_x)
        $ => D          :MLOAD(mulFp12BN254_b3_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(mulFp12BN254_b2b3sum_x)
        C               :MSTORE(mulFp12BN254_b2b3sum_y)
        
        $ => A          :MLOAD(mulFp12BN254_a1_x)
        $ => B          :MLOAD(mulFp12BN254_a1_y)
        $ => C          :MLOAD(mulFp12BN254_a2_x)
        $ => D          :MLOAD(mulFp12BN254_a2_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(mulFp12BN254_a1a2sum_x)
        C               :MSTORE(mulFp12BN254_a1a2sum_y)

        $ => A          :MLOAD(mulFp12BN254_b1_x)
        $ => B          :MLOAD(mulFp12BN254_b1_y)
        $ => C          :MLOAD(mulFp12BN254_b2_x)
        $ => D          :MLOAD(mulFp12BN254_b2_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(mulFp12BN254_b1b2sum_x)
        C               :MSTORE(mulFp12BN254_b1b2sum_y)

        $ => A          :MLOAD(mulFp12BN254_a1_x)
        $ => B          :MLOAD(mulFp12BN254_a1_y)
        $ => C          :MLOAD(mulFp12BN254_a3_x)
        $ => D          :MLOAD(mulFp12BN254_a3_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(mulFp12BN254_a1a3sum_x)
        C               :MSTORE(mulFp12BN254_a1a3sum_y)

        $ => A          :MLOAD(mulFp12BN254_b1_x)
        $ => B          :MLOAD(mulFp12BN254_b1_y)
        $ => C          :MLOAD(mulFp12BN254_b3_x)
        $ => D          :MLOAD(mulFp12BN254_b3_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(mulFp12BN254_b1b3sum_x)
        C               :MSTORE(mulFp12BN254_b1b3sum_y)

        ; 3] c1
        $ => A          :MLOAD(mulFp12BN254_a2a3sum_x)
        $ => B          :MLOAD(mulFp12BN254_a2a3sum_y)
        $ => C          :MLOAD(mulFp12BN254_b2b3sum_x)
        $ => D          :MLOAD(mulFp12BN254_b2b3sum_y)
                        :CALL(mulFp2BN254)
        
        E => A
        C => B
        $ => C          :MLOAD(mulFp12BN254_a2b2mul_x)
        $ => D          :MLOAD(mulFp12BN254_a2b2mul_y)
                        :CALL(subFp2BN254)
        E => A
        C => B
        $ => C          :MLOAD(mulFp12BN254_a3b3mul_x)
        $ => D          :MLOAD(mulFp12BN254_a3b3mul_y)
                        :CALL(subFp2BN254)
        E => A
        C => B
        9n => C
        1n => D
                        :CALL(mulFp2BN254)
        E => A
        C => B
        $ => C          :MLOAD(mulFp12BN254_a1b1mul_x)
        $ => D          :MLOAD(mulFp12BN254_a1b1mul_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(mulFp12BN254_c1_x)
        C               :MSTORE(mulFp12BN254_c1_y)

        ; 4] c2
        $ => A          :MLOAD(mulFp12BN254_a1a2sum_x)
        $ => B          :MLOAD(mulFp12BN254_a1a2sum_y)
        $ => C          :MLOAD(mulFp12BN254_b1b2sum_x)
        $ => D          :MLOAD(mulFp12BN254_b1b2sum_y)
                        :CALL(mulFp2BN254)
        
        E => A
        C => B
        $ => C          :MLOAD(mulFp12BN254_a1b1mul_x)
        $ => D          :MLOAD(mulFp12BN254_a1b1mul_y)
                        :CALL(subFp2BN254)
        E => A
        C => B
        $ => C          :MLOAD(mulFp12BN254_a2b2mul_x)
        $ => D          :MLOAD(mulFp12BN254_a2b2mul_y)
                        :CALL(subFp2BN254)
        E => A
        C => B
        $ => C          :MLOAD(mulFp12BN254_a3b3ximul_x)
        $ => D          :MLOAD(mulFp12BN254_a3b3ximul_y)
                        :CALL(addFp2BN254)
        E               :MSTORE(mulFp12BN254_c2_x)
        C               :MSTORE(mulFp12BN254_c2_y)

        ; 5] c3
        $ => A          :MLOAD(mulFp12BN254_a1a3sum_x)
        $ => B          :MLOAD(mulFp12BN254_a1a3sum_y)
        $ => C          :MLOAD(mulFp12BN254_b1b3sum_x)
        $ => D          :MLOAD(mulFp12BN254_b1b3sum_y)
                        :CALL(mulFp2BN254)
        
        E => A
        C => B
        $ => C          :MLOAD(mulFp12BN254_a1b1mul_x)
        $ => D          :MLOAD(mulFp12BN254_a1b1mul_y)
                        :CALL(subFp2BN254)
        E => A
        C => B
        $ => C          :MLOAD(mulFp12BN254_a2b2mul_x)
        $ => D          :MLOAD(mulFp12BN254_a2b2mul_y)
                        :CALL(addFp2BN254)
        E => A
        C => B
        $ => C          :MLOAD(mulFp12BN254_a3b3mul_x)
        $ => D          :MLOAD(mulFp12BN254_a3b3mul_y)
                        :CALL(subFp2BN254)
        E               :MSTORE(mulFp12BN254_c3_x)
        C               :MSTORE(mulFp12BN254_c3_y)

        $ => RR         :MLOAD(mulFp12BN254_RR),RETURN

INCLUDE "../FP2BN254/mulFp2BN254.zkasm"
INCLUDE "../FP2BN254/addFp2BN254.zkasm"
INCLUDE "../FP2BN254/subFp2BN254.zkasm"