; @info byte length of B
; @in B => number
; @out A => bytes length
getLenBytesNew:
    ; checks zk-counters
    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)
    ;:SAVE(B,C,D,E,RR,RCX)
    ; Check length slot by slot starting with slot 7
    ;[7], [6], [5], [4], [3], [2], [1], [0]
    ;[6], [5], [4], [3], [2], [1], [0], [7] -> ROTL_C
    B => C
    ROTL_C              :JMPZ(checkSlot6) ; length less than 29 bytes
    ROTL_C - 0x00000100 :JMPN(lenBytes29)
    ROTL_C - 0x00010000 :JMPN(lenBytes30)
    ROTL_C - 0x01000000 :JMPN(lenBytes31, lenBytes32)

checkSlot6:
    ROTL_C => C
    ROTL_C              :JMPZ(checkSlot5)
    ROTL_C - 0x00000100 :JMPN(lenBytes25)
    ROTL_C - 0x00010000 :JMPN(lenBytes26)
    ROTL_C - 0x01000000 :JMPN(lenBytes27, lenBytes28)

checkSlot5:
    ROTL_C => C
    ROTL_C              :JMPZ(checkSlot4)
    ROTL_C - 0x00000100 :JMPN(lenBytes21)
    ROTL_C - 0x00010000 :JMPN(lenBytes22)
    ROTL_C - 0x01000000 :JMPN(lenBytes23, lenBytes24)

checkSlot4:
    ROTL_C => C
    ROTL_C              :JMPZ(checkSlot3)
    ROTL_C - 0x00000100 :JMPN(lenBytes17)
    ROTL_C - 0x00010000 :JMPN(lenBytes18)
    ROTL_C - 0x01000000 :JMPN(lenBytes19, lenBytes20)

checkSlot3:
    ROTL_C => C
    ROTL_C              :JMPZ(checkSlot2)
    ROTL_C - 0x00000100 :JMPN(lenBytes13)
    ROTL_C - 0x00010000 :JMPN(lenBytes14)
    ROTL_C - 0x01000000 :JMPN(lenBytes15, lenBytes16)

checkSlot2:
    ROTL_C => C
    ROTL_C              :JMPZ(checkSlot1)
    ROTL_C - 0x00000100 :JMPN(lenBytes9)
    ROTL_C - 0x00010000 :JMPN(lenBytes10)
    ROTL_C - 0x01000000 :JMPN(lenBytes11, lenBytes12)

checkSlot1:
    ROTL_C => C
    ROTL_C              :JMPZ(checkSlot0)
    ROTL_C - 0x00000100 :JMPN(lenBytes5)
    ROTL_C - 0x00010000 :JMPN(lenBytes6)
    ROTL_C - 0x01000000 :JMPN(lenBytes7, lenBytes8)

checkSlot0:
    ROTL_C => C
    ROTL_C              :JMPZ(lenBytes0)
    ROTL_C - 0x00000100 :JMPN(lenBytes1)
    ROTL_C - 0x00010000 :JMPN(lenBytes2)
    ROTL_C - 0x01000000 :JMPN(lenBytes3, lenBytes4)

lenBytes32:
    32 => A     :RETURN
lenBytes31:
    31 => A     :RETURN
lenBytes30:
    30 => A     :RETURN
lenBytes29:
    29 => A     :RETURN
lenBytes28:
    28 => A     :RETURN
lenBytes27:
    27 => A     :RETURN
lenBytes26:
    26 => A     :RETURN
lenBytes25:
    25 => A     :RETURN
lenBytes24:
    24 => A     :RETURN
lenBytes23:
    23 => A     :RETURN
lenBytes22:
    22 => A     :RETURN
lenBytes21:
    21 => A     :RETURN
lenBytes20:
    20 => A     :RETURN
lenBytes19:
    19 => A     :RETURN
lenBytes18:
    18 => A     :RETURN
lenBytes17:
    17 => A     :RETURN
lenBytes16:
    16 => A     :RETURN
lenBytes15:
    15 => A     :RETURN
lenBytes14:
    14 => A     :RETURN
lenBytes13:
    13 => A     :RETURN
lenBytes12:
    12 => A     :RETURN
lenBytes11:
    11 => A     :RETURN
lenBytes10:
    10 => A     :RETURN
lenBytes9:
    9 => A     :RETURN
lenBytes8:
    8 => A     :RETURN
lenBytes7:
    7 => A     :RETURN
lenBytes6:
    6 => A     :RETURN
lenBytes5:
    5 => A     :RETURN
lenBytes4:
    4 => A     :RETURN
lenBytes3:
    3 => A     :RETURN
lenBytes2:
    2 => A     :RETURN
lenBytes1:
    1 => A     :RETURN
lenBytes0:
    0 => A     :RETURN