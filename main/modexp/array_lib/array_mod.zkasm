; TODO

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; array_mod:
;;             in: 
;;                  · C ∈ [1, 300], the len of inA
;;                  · D ∈ [1, 300], the len of inB
;;
;;          output: 
;;                  · out = inA % inB
;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 

VAR GLOBAL array_mod_len_inA
VAR GLOBAL array_mod_len_inB

VAR GLOBAL array_mod_RR

array_mod:
        RR              :MSTORE(array_mod_RR)
        C               :MSTORE(array_mod_len_inA)
        D               :MSTORE(array_mod_len_inB)

                        :CALL(array_div_mod_long)
        rem             :MSTORE(out + RR) ; TODO: Store the remainder of the previous operation
                        :JMP(array_mod_end)

array_mod_end:
        $ => RR         :MLOAD(array_mod_RR)
                        :RETURN