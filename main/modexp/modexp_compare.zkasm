;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; modexp_compare:
;;             in: 
;;                  · A ∈ [0, 2²⁵⁶ - 1], the len of inA
;;                  · B ∈ [0, 2²⁵⁶ - 1], the len of inB
;;
;;          output: 
;;                  · 2, if inA > inB
;;                  · 1, if inA = inB
;;                  · 0, if inA < inB
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

VAR GLOBAL inA[3]
VAR GLOBAL inB[3]
VAR GLOBAL lenA
VAR GLOBAL lenB

VAR GLOBAL modexp_compare_result

modexp_compare:
        A               :MSTORE(lenA)
        B               :MSTORE(lenB)
        $               :EQ, JMPC(modexp_compare_same_len)
        $               :LT, JMPC(modexp_compare_ALTB)

        2               :MSTORE(modexp_compare_result)
                        :JMP(modexp_compare_end)

modexp_compare_ALTB:
        0               :MSTORE(modexp_compare_result)
                        :JMP(modexp_compare_end)

modexp_compare_same_len:
        A - 1 => RR
        $ => A          :MLOAD(inA + RR) ; inA[lenA - 1]

        B - 1 => RR
        $ => B          :MLOAD(inB + RR) ; inB[lenB - 1]


modexp_compare_end:
                        :RETURN