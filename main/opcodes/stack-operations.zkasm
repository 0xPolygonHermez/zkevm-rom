
opPUSH1:
    1 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH2:
    2 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH3:
    3 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH4:
    4 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH5:
    5 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH6:
    6 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH7:
    7 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH8:
    8 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH9:
    9 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH10:
    10 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH11:
    11 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH12:
    12 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH13:
    13 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH14:
    14 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH15:
    15 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH16:
    16 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH17:
    17 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH18:
    18 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH19:
    19 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH20:
    20 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH21:
    21 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH22:
    22 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH23:
    23 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH24:
    24 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH25:
    25 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH26:
    26 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH27:
    27 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH28:
    28 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH29:
    29 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH30:
    30 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH31:
    31 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)

opPUSH32:
    32 => D
    $ => B                          :MLOAD(isCreateContract)
    0 - B                           :JMPN(opAuxPUSHB)
                                    :JMP(opAuxPUSHA)


opAuxPUSHA:

    %MAX_CNT_BINARY - CNT_BINARY - 6 :JMPN(outOfCountersBinary)
    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    GAS-3 => GAS        :JMPN(outOfGas)
                        :CALL(readPush)
    E                   :MSTORE(SP++)
    1024 - SP           :JMPN(stackOverflow)
    PC + D => PC
                        :JMP(readCode)

opAuxPUSHB:

    %MAX_CNT_BINARY - CNT_BINARY - 6 :JMPN(outOfCountersBinary)
    %MAX_CNT_STEPS - STEP - 600 :JMPN(outOfCountersStep)

    1 => A
    $ => B                          :MLOAD(isCreate)
    $                               :EQ,JMPC(opAuxPUSHBcreate)
    D - 1 => C
    0 => A

opAuxPUSHBloop:
    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)
    %MAX_CNT_BINARY - CNT_BINARY - 4 :JMPN(outOfCountersBinary)
    %MAX_CNT_ARITH - CNT_ARITH - 4 :JMPN(outOfCountersArith)

    1 => D
    $ => HASHPOS                    :MLOAD(dataStarts)
    HASHPOS + PC => HASHPOS
    PC + 1 => PC
    $ => E                          :MLOAD(batchHashDataId)
    $ => B                          :HASHK(E)
    A + B => A
    C - 1 => C                      :JMPN(opAuxPUSHBend)
                                    :CALL(SHLarith)
                                    :JMP(opAuxPUSHBloop)

opAuxPUSHBend:
    GAS-3 => GAS                    :JMPN(outOfGas)
    A                               :MSTORE(SP++)
    1024 - SP                       :JMPN(stackOverflow)
                                    :JMP(readCode)

opAuxPUSHBcreate:

    %MAX_CNT_ARITH - CNT_ARITH - 224 :JMPN(outOfCountersArith)
    %MAX_CNT_BINARY - CNT_BINARY - 225 :JMPN(outOfCountersBinary)
    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 2 :JMPN(outOfCountersMemalign)

    0 => B
    $ => CTX                        :MLOAD(originCTX)
    $ => E                          :MLOAD(argsOffsetCall)
    E + PC => E
    D => C
                                    :CALL(MLOADX)
    PC + C => PC
    32 - C => D
                                    :CALL(SHRarith)
    $ => CTX                        :MLOAD(currentCTX)
                                    :JMP(opAuxPUSHBend)


opDUP1:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 1 => SP    :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP++)
    1024 - SP       :JMPN(stackOverflow)
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP2:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 2 => SP    :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 2 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP3:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 3 => SP    :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 3 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP4:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 4 => SP    :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 4 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP5:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 5 => SP    :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 5 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP6:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 6 => SP    :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 6 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP7:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 7 => SP    :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 7 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP8:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 8 => SP    :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 8 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP9:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 9 => SP    :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 9 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP10:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 10 => SP   :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 10 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP11:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 11 => SP   :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 11 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP12:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 12 => SP   :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 12 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP13:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 13 => SP   :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 13 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP14:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 14 => SP   :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 14 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP15:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 15 => SP   :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 15 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opDUP16:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 16 => SP   :JMPN(stackUnderflow)
    $ => A          :MLOAD(SP)
    SP + 16 => SP
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP1:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 2          :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP--)
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP2:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 3          :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 2 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 2 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP3:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 4          :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 3 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 3 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP4:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 5          :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 4 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 4 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP5:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 6          :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 5 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 5 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP6:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 7          :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 6 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 6 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP7:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 8          :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 7 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 7 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP8:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 9          :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 8 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 8 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP9:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 10         :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 9 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 9 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP10:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 11         :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 10 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 10 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP11:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 12         :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 11 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 11 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP12:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 13         :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 12 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 12 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP13:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 14         :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 13 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 13 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP14:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 15         :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 14 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 14 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP15:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 16         :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 15 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 15 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opSWAP16:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 17         :JMPN(stackUnderflow)
    SP - 1 => SP
    $ => A          :MLOAD(SP)
    SP - 16 => SP
    $ => B          :MLOAD(SP)
    A               :MSTORE(SP)
    SP + 16 => SP
    B               :MSTORE(SP++)
    1024 - SP       :JMPN(stackOverflow)
    GAS-3 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)

opPOP:

    %MAX_CNT_STEPS - STEP - 120 :JMPN(outOfCountersStep)

    SP - 1 => SP    :JMPN(stackUnderflow)
    GAS-2 => GAS    :JMPN(outOfGas)
                    :JMP(readCode)
